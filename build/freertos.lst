ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata.StartTask.str1.4,"aMS",%progbits,1
  20              		.align	2
  21              	.LC0:
  22 0000 4C434456 		.ascii	"LCDViewTask\000"
  22      69657754 
  22      61736B00 
  23              		.align	2
  24              	.LC1:
  25 000c 4D6F746F 		.ascii	"MotorTask\000"
  25      72546173 
  25      6B00
  26 0016 0000     		.align	2
  27              	.LC2:
  28 0018 48616C6C 		.ascii	"HallTask\000"
  28      5461736B 
  28      00
  29              		.section	.text.StartTask,"ax",%progbits
  30              		.align	1
  31              		.global	StartTask
  32              		.syntax unified
  33              		.thumb
  34              		.thumb_func
  36              	StartTask:
  37              	.LVL0:
  38              	.LFB175:
  39              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 2


  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** #include "usart.h"
  29:Core/Src/freertos.c **** #include "spi.h"
  30:Core/Src/freertos.c **** #include "motor.h"
  31:Core/Src/freertos.c **** #include "bsp_as5600.h"
  32:Core/Src/freertos.c **** /* USER CODE END Includes */
  33:Core/Src/freertos.c **** 
  34:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/freertos.c **** //任务优先级
  37:Core/Src/freertos.c **** #define LCDVIEW_TASK_PRIO	1
  38:Core/Src/freertos.c **** //任务堆栈大小	
  39:Core/Src/freertos.c **** #define LCDVIEW_STK_SIZE 	256  
  40:Core/Src/freertos.c **** //任务句柄
  41:Core/Src/freertos.c **** TaskHandle_t LCDViewTask_Handler;
  42:Core/Src/freertos.c **** //任务函数
  43:Core/Src/freertos.c **** void LCDViewTask(void *pvParameters);
  44:Core/Src/freertos.c **** 
  45:Core/Src/freertos.c **** //任务优先级
  46:Core/Src/freertos.c **** #define MOTOR_TASK_PRIO	3
  47:Core/Src/freertos.c **** //任务堆栈大小	
  48:Core/Src/freertos.c **** #define MOTOR_STK_SIZE 	256  
  49:Core/Src/freertos.c **** //任务句柄
  50:Core/Src/freertos.c **** TaskHandle_t MotorTask_Handler;
  51:Core/Src/freertos.c **** //任务函数
  52:Core/Src/freertos.c **** void MotorTask(void *pvParameters);
  53:Core/Src/freertos.c **** 
  54:Core/Src/freertos.c **** //任务优先级
  55:Core/Src/freertos.c **** #define HALL_TASK_PRIO	2
  56:Core/Src/freertos.c **** //任务堆栈大小	
  57:Core/Src/freertos.c **** #define HALL_STK_SIZE 	256  
  58:Core/Src/freertos.c **** //任务句柄
  59:Core/Src/freertos.c **** TaskHandle_t HallTask_Handler;
  60:Core/Src/freertos.c **** //任务函数
  61:Core/Src/freertos.c **** void HallTask(void *pvParameters);
  62:Core/Src/freertos.c **** /* USER CODE END PTD */
  63:Core/Src/freertos.c **** 
  64:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  65:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  66:Core/Src/freertos.c **** void 	LCD_Test_Clear(void);			// 清屏测试
  67:Core/Src/freertos.c **** void 	LCD_Test_Variable (void);	   // 变量显示，包括整数和小数
  68:Core/Src/freertos.c **** /* USER CODE END PD */
  69:Core/Src/freertos.c **** 
  70:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 3


  71:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  72:Core/Src/freertos.c **** float angle;
  73:Core/Src/freertos.c **** int angle_int, angle_frac;
  74:Core/Src/freertos.c **** /* USER CODE END PM */
  75:Core/Src/freertos.c **** 
  76:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  77:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  78:Core/Src/freertos.c **** 
  79:Core/Src/freertos.c **** /* USER CODE END Variables */
  80:Core/Src/freertos.c **** /* Definitions for startTask */
  81:Core/Src/freertos.c **** osThreadId_t startTaskHandle;
  82:Core/Src/freertos.c **** const osThreadAttr_t startTask_attributes = {
  83:Core/Src/freertos.c ****   .name = "startTask",
  84:Core/Src/freertos.c ****   .stack_size = 128 * 4,
  85:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
  86:Core/Src/freertos.c **** };
  87:Core/Src/freertos.c **** 
  88:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  89:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  90:Core/Src/freertos.c **** 
  91:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  92:Core/Src/freertos.c **** 
  93:Core/Src/freertos.c **** void StartTask(void *argument);
  94:Core/Src/freertos.c **** 
  95:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  96:Core/Src/freertos.c **** 
  97:Core/Src/freertos.c **** /**
  98:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  99:Core/Src/freertos.c ****   * @param  None
 100:Core/Src/freertos.c ****   * @retval None
 101:Core/Src/freertos.c ****   */
 102:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
 103:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 104:Core/Src/freertos.c **** 
 105:Core/Src/freertos.c ****   /* USER CODE END Init */
 106:Core/Src/freertos.c **** 
 107:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 108:Core/Src/freertos.c ****   /* add mutexes, ... */
 109:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 110:Core/Src/freertos.c **** 
 111:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 112:Core/Src/freertos.c ****   /* add semaphores, ... */
 113:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 114:Core/Src/freertos.c **** 
 115:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 116:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 117:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 118:Core/Src/freertos.c **** 
 119:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 120:Core/Src/freertos.c ****   /* add queues, ... */
 121:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 122:Core/Src/freertos.c **** 
 123:Core/Src/freertos.c ****   /* Create the thread(s) */
 124:Core/Src/freertos.c ****   /* creation of startTask */
 125:Core/Src/freertos.c ****   startTaskHandle = osThreadNew(StartTask, NULL, &startTask_attributes);
 126:Core/Src/freertos.c **** 
 127:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 4


 128:Core/Src/freertos.c ****   /* add threads, ... */
 129:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 130:Core/Src/freertos.c **** 
 131:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 132:Core/Src/freertos.c ****   /* add events, ... */
 133:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 134:Core/Src/freertos.c **** 
 135:Core/Src/freertos.c **** }
 136:Core/Src/freertos.c **** 
 137:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartTask */
 138:Core/Src/freertos.c **** /**
 139:Core/Src/freertos.c ****   * @brief  Function implementing the startTask thread.
 140:Core/Src/freertos.c ****   * @param  argument: Not used
 141:Core/Src/freertos.c ****   * @retval None
 142:Core/Src/freertos.c ****   */
 143:Core/Src/freertos.c **** /* USER CODE END Header_StartTask */
 144:Core/Src/freertos.c **** void StartTask(void *argument)
 145:Core/Src/freertos.c **** {
  40              		.loc 1 145 1 view -0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 0
  43              		@ frame_needed = 0, uses_anonymous_args = 0
  44              		.loc 1 145 1 is_stmt 0 view .LVU1
  45 0000 00B5     		push	{lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 4
  48              		.cfi_offset 14, -4
  49 0002 83B0     		sub	sp, sp, #12
  50              	.LCFI1:
  51              		.cfi_def_cfa_offset 16
 146:Core/Src/freertos.c ****   /* USER CODE BEGIN StartTask */
 147:Core/Src/freertos.c ****   taskENTER_CRITICAL();           //进入临界�??
  52              		.loc 1 147 3 is_stmt 1 view .LVU2
  53 0004 FFF7FEFF 		bl	vPortEnterCritical
  54              	.LVL1:
 148:Core/Src/freertos.c **** 	//创建LCD的显示任务
 149:Core/Src/freertos.c ****   xTaskCreate((TaskFunction_t )LCDViewTask,             
  55              		.loc 1 149 3 view .LVU3
  56 0008 144B     		ldr	r3, .L3
  57 000a 0193     		str	r3, [sp, #4]
  58 000c 0123     		movs	r3, #1
  59 000e 0093     		str	r3, [sp]
  60 0010 0023     		movs	r3, #0
  61 0012 4FF48072 		mov	r2, #256
  62 0016 1249     		ldr	r1, .L3+4
  63 0018 1248     		ldr	r0, .L3+8
  64 001a FFF7FEFF 		bl	xTaskCreate
  65              	.LVL2:
 150:Core/Src/freertos.c ****               (const char*    )"LCDViewTask",           
 151:Core/Src/freertos.c ****               (uint16_t       )LCDVIEW_STK_SIZE,        
 152:Core/Src/freertos.c ****               (void*          )NULL,                  
 153:Core/Src/freertos.c ****               (UBaseType_t    )LCDVIEW_TASK_PRIO,        
 154:Core/Src/freertos.c ****               (TaskHandle_t*  )&LCDViewTask_Handler);   	
 155:Core/Src/freertos.c **** 
 156:Core/Src/freertos.c ****   //创建电机控制任务
 157:Core/Src/freertos.c ****   xTaskCreate((TaskFunction_t )MotorTask,             
  66              		.loc 1 157 3 view .LVU4
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 5


  67 001e 124B     		ldr	r3, .L3+12
  68 0020 0193     		str	r3, [sp, #4]
  69 0022 0323     		movs	r3, #3
  70 0024 0093     		str	r3, [sp]
  71 0026 0023     		movs	r3, #0
  72 0028 4FF48072 		mov	r2, #256
  73 002c 0F49     		ldr	r1, .L3+16
  74 002e 1048     		ldr	r0, .L3+20
  75 0030 FFF7FEFF 		bl	xTaskCreate
  76              	.LVL3:
 158:Core/Src/freertos.c ****               (const char*    )"MotorTask",           
 159:Core/Src/freertos.c ****               (uint16_t       )MOTOR_STK_SIZE,        
 160:Core/Src/freertos.c ****               (void*          )NULL,                  
 161:Core/Src/freertos.c ****               (UBaseType_t    )MOTOR_TASK_PRIO,        
 162:Core/Src/freertos.c ****               (TaskHandle_t*  )&MotorTask_Handler); 
 163:Core/Src/freertos.c ****   //创建霍尔传感器任务
 164:Core/Src/freertos.c ****   xTaskCreate((TaskFunction_t )HallTask,             
  77              		.loc 1 164 3 view .LVU5
  78 0034 0F4B     		ldr	r3, .L3+24
  79 0036 0193     		str	r3, [sp, #4]
  80 0038 0223     		movs	r3, #2
  81 003a 0093     		str	r3, [sp]
  82 003c 0023     		movs	r3, #0
  83 003e 4FF48072 		mov	r2, #256
  84 0042 0D49     		ldr	r1, .L3+28
  85 0044 0D48     		ldr	r0, .L3+32
  86 0046 FFF7FEFF 		bl	xTaskCreate
  87              	.LVL4:
 165:Core/Src/freertos.c ****               (const char*    )"HallTask",           
 166:Core/Src/freertos.c ****               (uint16_t       )HALL_STK_SIZE,        
 167:Core/Src/freertos.c ****               (void*          )NULL,                  
 168:Core/Src/freertos.c ****               (UBaseType_t    )HALL_TASK_PRIO,        
 169:Core/Src/freertos.c ****               (TaskHandle_t*  )&HallTask_Handler); 
 170:Core/Src/freertos.c ****       
 171:Core/Src/freertos.c ****   osThreadTerminate(startTaskHandle); //删除�?始任�?
  88              		.loc 1 171 3 view .LVU6
  89 004a 0D4B     		ldr	r3, .L3+36
  90 004c 1868     		ldr	r0, [r3]
  91 004e FFF7FEFF 		bl	osThreadTerminate
  92              	.LVL5:
 172:Core/Src/freertos.c ****   taskEXIT_CRITICAL();            //�?出临界区
  93              		.loc 1 172 3 view .LVU7
  94 0052 FFF7FEFF 		bl	vPortExitCritical
  95              	.LVL6:
 173:Core/Src/freertos.c ****   /* USER CODE END StartTask */
 174:Core/Src/freertos.c **** }
  96              		.loc 1 174 1 is_stmt 0 view .LVU8
  97 0056 03B0     		add	sp, sp, #12
  98              	.LCFI2:
  99              		.cfi_def_cfa_offset 4
 100              		@ sp needed
 101 0058 5DF804FB 		ldr	pc, [sp], #4
 102              	.L4:
 103              		.align	2
 104              	.L3:
 105 005c 00000000 		.word	.LANCHOR0
 106 0060 00000000 		.word	.LC0
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 6


 107 0064 00000000 		.word	LCDViewTask
 108 0068 00000000 		.word	.LANCHOR1
 109 006c 0C000000 		.word	.LC1
 110 0070 00000000 		.word	MotorTask
 111 0074 00000000 		.word	.LANCHOR2
 112 0078 18000000 		.word	.LC2
 113 007c 00000000 		.word	HallTask
 114 0080 00000000 		.word	.LANCHOR3
 115              		.cfi_endproc
 116              	.LFE175:
 118              		.section	.text.MotorTask,"ax",%progbits
 119              		.align	1
 120              		.global	MotorTask
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 125              	MotorTask:
 126              	.LFB177:
 175:Core/Src/freertos.c **** 
 176:Core/Src/freertos.c **** /* Private application code --------------------------------------------------*/
 177:Core/Src/freertos.c **** /* USER CODE BEGIN Application */
 178:Core/Src/freertos.c **** void LCDViewTask(void *pvParameters)
 179:Core/Src/freertos.c **** {
 180:Core/Src/freertos.c ****   while(1)
 181:Core/Src/freertos.c ****   {
 182:Core/Src/freertos.c ****     LCD_Test_Clear();    // 清屏测试
 183:Core/Src/freertos.c ****     LCD_Test_Variable();    // 变量显示测试
 184:Core/Src/freertos.c ****   }
 185:Core/Src/freertos.c **** }
 186:Core/Src/freertos.c **** 
 187:Core/Src/freertos.c **** void MotorTask(void *pvParameters)
 188:Core/Src/freertos.c **** {
 127              		.loc 1 188 1 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ Volatile: function does not return.
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              	.LVL7:
 133              		.loc 1 188 1 is_stmt 0 view .LVU10
 134 0000 08B5     		push	{r3, lr}
 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 3, -8
 138              		.cfi_offset 14, -4
 139              	.LVL8:
 140              	.L6:
 189:Core/Src/freertos.c ****   while(1)
 141              		.loc 1 189 3 is_stmt 1 discriminator 1 view .LVU11
 190:Core/Src/freertos.c ****   {
 191:Core/Src/freertos.c ****     velocityOpenloop(10);
 142              		.loc 1 191 5 discriminator 1 view .LVU12
 143 0002 B2EE040A 		vmov.f32	s0, #1.0e+1
 144 0006 FFF7FEFF 		bl	velocityOpenloop
 145              	.LVL9:
 192:Core/Src/freertos.c ****     vTaskDelay(1);
 146              		.loc 1 192 5 discriminator 1 view .LVU13
 147 000a 0120     		movs	r0, #1
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 7


 148 000c FFF7FEFF 		bl	vTaskDelay
 149              	.LVL10:
 189:Core/Src/freertos.c ****   while(1)
 150              		.loc 1 189 8 discriminator 1 view .LVU14
 151 0010 F7E7     		b	.L6
 152              		.cfi_endproc
 153              	.LFE177:
 155              		.section	.rodata.HallTask.str1.4,"aMS",%progbits,1
 156              		.align	2
 157              	.LC3:
 158 0000 616E676C 		.ascii	"angle: %d.%03d \015\012\000"
 158      653A2025 
 158      642E2530 
 158      3364200D 
 158      0A00
 159              		.section	.text.HallTask,"ax",%progbits
 160              		.align	1
 161              		.global	HallTask
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 166              	HallTask:
 167              	.LFB178:
 193:Core/Src/freertos.c ****   }
 194:Core/Src/freertos.c **** }
 195:Core/Src/freertos.c **** 
 196:Core/Src/freertos.c **** void HallTask(void *pvParameters)
 197:Core/Src/freertos.c **** {
 168              		.loc 1 197 1 view -0
 169              		.cfi_startproc
 170              		@ Volatile: function does not return.
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              	.LVL11:
 174              		.loc 1 197 1 is_stmt 0 view .LVU16
 175 0000 08B5     		push	{r3, lr}
 176              	.LCFI4:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 3, -8
 179              		.cfi_offset 14, -4
 180              	.LVL12:
 181              	.L9:
 198:Core/Src/freertos.c ****   while(1)
 182              		.loc 1 198 3 is_stmt 1 discriminator 1 view .LVU17
 183              	.LBB2:
 199:Core/Src/freertos.c ****   {
 200:Core/Src/freertos.c ****     angle = bsp_as5600GetAngle();
 184              		.loc 1 200 5 discriminator 1 view .LVU18
 185              		.loc 1 200 13 is_stmt 0 discriminator 1 view .LVU19
 186 0002 FFF7FEFF 		bl	bsp_as5600GetAngle
 187              	.LVL13:
 188              		.loc 1 200 11 discriminator 1 view .LVU20
 189 0006 104B     		ldr	r3, .L11
 190 0008 83ED000A 		vstr.32	s0, [r3]
 201:Core/Src/freertos.c ****     angle_int = (int)angle;
 191              		.loc 1 201 5 is_stmt 1 discriminator 1 view .LVU21
 192              		.loc 1 201 17 is_stmt 0 discriminator 1 view .LVU22
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 8


 193 000c FDEEC07A 		vcvt.s32.f32	s15, s0
 194              		.loc 1 201 15 discriminator 1 view .LVU23
 195 0010 0E4B     		ldr	r3, .L11+4
 196 0012 C3ED007A 		vstr.32	s15, [r3]	@ int
 202:Core/Src/freertos.c ****     angle_frac = (int)((angle - angle_int) * 1000);
 197              		.loc 1 202 5 is_stmt 1 discriminator 1 view .LVU24
 198              		.loc 1 202 31 is_stmt 0 discriminator 1 view .LVU25
 199 0016 B8EEE77A 		vcvt.f32.s32	s14, s15
 200 001a 30EE470A 		vsub.f32	s0, s0, s14
 201              		.loc 1 202 44 discriminator 1 view .LVU26
 202 001e 9FED0C7A 		vldr.32	s14, .L11+8
 203 0022 20EE070A 		vmul.f32	s0, s0, s14
 204              		.loc 1 202 18 discriminator 1 view .LVU27
 205 0026 BDEEC07A 		vcvt.s32.f32	s14, s0
 206 002a 17EE102A 		vmov	r2, s14	@ int
 207              		.loc 1 202 16 discriminator 1 view .LVU28
 208 002e 094B     		ldr	r3, .L11+12
 209 0030 83ED007A 		vstr.32	s14, [r3]	@ int
 203:Core/Src/freertos.c ****     Usart1Printf("angle: %d.%03d \r\n", angle_int, angle_frac);
 210              		.loc 1 203 5 is_stmt 1 discriminator 1 view .LVU29
 211 0034 17EE901A 		vmov	r1, s15	@ int
 212 0038 0748     		ldr	r0, .L11+16
 213 003a FFF7FEFF 		bl	Usart1Printf
 214              	.LVL14:
 204:Core/Src/freertos.c ****     vTaskDelay(100);
 215              		.loc 1 204 5 discriminator 1 view .LVU30
 216 003e 6420     		movs	r0, #100
 217 0040 FFF7FEFF 		bl	vTaskDelay
 218              	.LVL15:
 219              	.LBE2:
 198:Core/Src/freertos.c ****   {
 220              		.loc 1 198 8 discriminator 1 view .LVU31
 221 0044 DDE7     		b	.L9
 222              	.L12:
 223 0046 00BF     		.align	2
 224              	.L11:
 225 0048 00000000 		.word	.LANCHOR4
 226 004c 00000000 		.word	.LANCHOR5
 227 0050 00007A44 		.word	1148846080
 228 0054 00000000 		.word	.LANCHOR6
 229 0058 00000000 		.word	.LC3
 230              		.cfi_endproc
 231              	.LFE178:
 233              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 234              		.align	1
 235              		.global	MX_FREERTOS_Init
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 240              	MX_FREERTOS_Init:
 241              	.LFB174:
 102:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 242              		.loc 1 102 29 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 9


 247              	.LCFI5:
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 3, -8
 250              		.cfi_offset 14, -4
 125:Core/Src/freertos.c **** 
 251              		.loc 1 125 3 view .LVU33
 125:Core/Src/freertos.c **** 
 252              		.loc 1 125 21 is_stmt 0 view .LVU34
 253 0002 044A     		ldr	r2, .L15
 254 0004 0021     		movs	r1, #0
 255 0006 0448     		ldr	r0, .L15+4
 256 0008 FFF7FEFF 		bl	osThreadNew
 257              	.LVL16:
 125:Core/Src/freertos.c **** 
 258              		.loc 1 125 19 view .LVU35
 259 000c 034B     		ldr	r3, .L15+8
 260 000e 1860     		str	r0, [r3]
 135:Core/Src/freertos.c **** 
 261              		.loc 1 135 1 view .LVU36
 262 0010 08BD     		pop	{r3, pc}
 263              	.L16:
 264 0012 00BF     		.align	2
 265              	.L15:
 266 0014 00000000 		.word	.LANCHOR7
 267 0018 00000000 		.word	StartTask
 268 001c 00000000 		.word	.LANCHOR3
 269              		.cfi_endproc
 270              	.LFE174:
 272              		.section	.text.LCD_Test_Clear,"ax",%progbits
 273              		.align	1
 274              		.global	LCD_Test_Clear
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 279              	LCD_Test_Clear:
 280              	.LFB179:
 205:Core/Src/freertos.c ****   }
 206:Core/Src/freertos.c **** }
 207:Core/Src/freertos.c **** /*************************************************************************************************
 208:Core/Src/freertos.c **** *	�????? �????? �?????:	LCD_Test_Clear
 209:Core/Src/freertos.c **** *
 210:Core/Src/freertos.c **** *	函数功能:	清屏测试
 211:Core/Src/freertos.c **** *************************************************************************************************/
 212:Core/Src/freertos.c **** void LCD_Test_Clear(void)
 213:Core/Src/freertos.c **** {
 281              		.loc 1 213 1 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285 0000 10B5     		push	{r4, lr}
 286              	.LCFI6:
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 4, -8
 289              		.cfi_offset 14, -4
 214:Core/Src/freertos.c ****     uint8_t	i = 0;			// 计数变量
 290              		.loc 1 214 5 view .LVU38
 291              	.LVL17:
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 10


 215:Core/Src/freertos.c ****     
 216:Core/Src/freertos.c ****     LCD_SetDirection(Direction_H);		
 292              		.loc 1 216 5 view .LVU39
 293 0002 0020     		movs	r0, #0
 294 0004 FFF7FEFF 		bl	LCD_SetDirection
 295              	.LVL18:
 217:Core/Src/freertos.c ****     LCD_SetColor(LCD_DISP_BLACK);				// 设置画笔颜色
 296              		.loc 1 217 5 view .LVU40
 297 0008 0020     		movs	r0, #0
 298 000a FFF7FEFF 		bl	LCD_SetColor
 299              	.LVL19:
 218:Core/Src/freertos.c **** 
 219:Core/Src/freertos.c ****     for(i=0;i<5;i++)
 300              		.loc 1 219 5 view .LVU41
 301              		.loc 1 219 10 is_stmt 0 view .LVU42
 302 000e 0024     		movs	r4, #0
 303              		.loc 1 219 5 view .LVU43
 304 0010 0BE0     		b	.L18
 305              	.LVL20:
 306              	.L25:
 220:Core/Src/freertos.c ****     {
 221:Core/Src/freertos.c ****         switch (i)		// 切换背景�?????
 222:Core/Src/freertos.c ****         {
 223:Core/Src/freertos.c ****             case 0: LCD_SetBackColor(LCD_DISP_RED); 		break;	
 307              		.loc 1 223 21 is_stmt 1 view .LVU44
 308 0012 4FF47840 		mov	r0, #63488
 309 0016 FFF7FEFF 		bl	LCD_SetBackColor
 310              	.LVL21:
 311              		.loc 1 223 55 view .LVU45
 312              	.L19:
 224:Core/Src/freertos.c ****             case 1: LCD_SetBackColor(LCD_DISP_GREEN); 	break;				
 225:Core/Src/freertos.c ****             case 2: LCD_SetBackColor(LCD_DISP_BLUE); 		break;
 226:Core/Src/freertos.c ****             case 3: LCD_SetBackColor(LCD_DISP_GRAY); 		break;
 227:Core/Src/freertos.c ****             case 4: LCD_SetBackColor(LCD_DISP_WHITE); 		break;			
 228:Core/Src/freertos.c ****             default:	break;			
 229:Core/Src/freertos.c ****         }
 230:Core/Src/freertos.c ****         LCD_Clear();		// 清屏
 313              		.loc 1 230 9 discriminator 2 view .LVU46
 314 001a FFF7FEFF 		bl	LCD_Clear
 315              	.LVL22:
 231:Core/Src/freertos.c ****         vTaskDelay(1000);
 316              		.loc 1 231 9 discriminator 2 view .LVU47
 317 001e 4FF47A70 		mov	r0, #1000
 318 0022 FFF7FEFF 		bl	vTaskDelay
 319              	.LVL23:
 219:Core/Src/freertos.c ****     {
 320              		.loc 1 219 17 discriminator 2 view .LVU48
 219:Core/Src/freertos.c ****     {
 321              		.loc 1 219 18 is_stmt 0 discriminator 2 view .LVU49
 322 0026 0134     		adds	r4, r4, #1
 323              	.LVL24:
 219:Core/Src/freertos.c ****     {
 324              		.loc 1 219 18 discriminator 2 view .LVU50
 325 0028 E4B2     		uxtb	r4, r4
 326              	.LVL25:
 327              	.L18:
 219:Core/Src/freertos.c ****     {
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 11


 328              		.loc 1 219 13 is_stmt 1 discriminator 1 view .LVU51
 219:Core/Src/freertos.c ****     {
 329              		.loc 1 219 5 is_stmt 0 discriminator 1 view .LVU52
 330 002a 042C     		cmp	r4, #4
 331 002c 21D8     		bhi	.L28
 221:Core/Src/freertos.c ****         {
 332              		.loc 1 221 9 is_stmt 1 view .LVU53
 333 002e 042C     		cmp	r4, #4
 334 0030 F3D8     		bhi	.L19
 335 0032 01A3     		adr	r3, .L21
 336 0034 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 337              		.p2align 2
 338              	.L21:
 339 0038 13000000 		.word	.L25+1
 340 003c 4D000000 		.word	.L24+1
 341 0040 57000000 		.word	.L23+1
 342 0044 5F000000 		.word	.L22+1
 343 0048 69000000 		.word	.L20+1
 344              		.p2align 1
 345              	.L24:
 224:Core/Src/freertos.c ****             case 2: LCD_SetBackColor(LCD_DISP_BLUE); 		break;
 346              		.loc 1 224 21 view .LVU54
 347 004c 4FF4FC60 		mov	r0, #2016
 348 0050 FFF7FEFF 		bl	LCD_SetBackColor
 349              	.LVL26:
 224:Core/Src/freertos.c ****             case 2: LCD_SetBackColor(LCD_DISP_BLUE); 		break;
 350              		.loc 1 224 56 view .LVU55
 224:Core/Src/freertos.c ****             case 2: LCD_SetBackColor(LCD_DISP_BLUE); 		break;
 351              		.loc 1 224 13 is_stmt 0 view .LVU56
 352 0054 E1E7     		b	.L19
 353              	.L23:
 225:Core/Src/freertos.c ****             case 3: LCD_SetBackColor(LCD_DISP_GRAY); 		break;
 354              		.loc 1 225 21 is_stmt 1 view .LVU57
 355 0056 1F20     		movs	r0, #31
 356 0058 FFF7FEFF 		bl	LCD_SetBackColor
 357              	.LVL27:
 225:Core/Src/freertos.c ****             case 3: LCD_SetBackColor(LCD_DISP_GRAY); 		break;
 358              		.loc 1 225 56 view .LVU58
 225:Core/Src/freertos.c ****             case 3: LCD_SetBackColor(LCD_DISP_GRAY); 		break;
 359              		.loc 1 225 13 is_stmt 0 view .LVU59
 360 005c DDE7     		b	.L19
 361              	.L22:
 226:Core/Src/freertos.c ****             case 4: LCD_SetBackColor(LCD_DISP_WHITE); 		break;			
 362              		.loc 1 226 21 is_stmt 1 view .LVU60
 363 005e 4EF65D70 		movw	r0, #61277
 364 0062 FFF7FEFF 		bl	LCD_SetBackColor
 365              	.LVL28:
 226:Core/Src/freertos.c ****             case 4: LCD_SetBackColor(LCD_DISP_WHITE); 		break;			
 366              		.loc 1 226 56 view .LVU61
 226:Core/Src/freertos.c ****             case 4: LCD_SetBackColor(LCD_DISP_WHITE); 		break;			
 367              		.loc 1 226 13 is_stmt 0 view .LVU62
 368 0066 D8E7     		b	.L19
 369              	.L20:
 227:Core/Src/freertos.c ****             default:	break;			
 370              		.loc 1 227 21 is_stmt 1 view .LVU63
 371 0068 4FF6FF70 		movw	r0, #65535
 372 006c FFF7FEFF 		bl	LCD_SetBackColor
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 12


 373              	.LVL29:
 227:Core/Src/freertos.c ****             default:	break;			
 374              		.loc 1 227 57 view .LVU64
 227:Core/Src/freertos.c ****             default:	break;			
 375              		.loc 1 227 13 is_stmt 0 view .LVU65
 376 0070 D3E7     		b	.L19
 377              	.L28:
 232:Core/Src/freertos.c ****     }
 233:Core/Src/freertos.c **** }
 378              		.loc 1 233 1 view .LVU66
 379 0072 10BD     		pop	{r4, pc}
 380              		.loc 1 233 1 view .LVU67
 381              		.cfi_endproc
 382              	.LFE179:
 384              		.section	.rodata.LCD_Test_Variable.str1.4,"aMS",%progbits,1
 385              		.align	2
 386              	.LC4:
 387 0000 74657374 		.ascii	"test +:\000"
 387      202B3A00 
 388              		.align	2
 389              	.LC5:
 390 0008 74657374 		.ascii	"test -:\000"
 390      202D3A00 
 391              		.align	2
 392              	.LC6:
 393 0010 74657374 		.ascii	"test :\000"
 393      203A00
 394 0017 00       		.align	2
 395              	.LC7:
 396 0018 74657374 		.ascii	"test0:\000"
 396      303A00
 397 001f 00       		.align	2
 398              	.LC8:
 399 0020 74657374 		.ascii	"test+.:\000"
 399      2B2E3A00 
 400              		.align	2
 401              	.LC9:
 402 0028 74657374 		.ascii	"test-.:\000"
 402      2D2E3A00 
 403              		.global	__aeabi_i2d
 404              		.global	__aeabi_dmul
 405              		.global	__aeabi_dadd
 406              		.global	__aeabi_d2f
 407              		.global	__aeabi_dsub
 408              		.section	.text.LCD_Test_Variable,"ax",%progbits
 409              		.align	1
 410              		.global	LCD_Test_Variable
 411              		.syntax unified
 412              		.thumb
 413              		.thumb_func
 415              	LCD_Test_Variable:
 416              	.LFB180:
 234:Core/Src/freertos.c **** 
 235:Core/Src/freertos.c **** 
 236:Core/Src/freertos.c **** /************************************************************************************************
 237:Core/Src/freertos.c **** *	�????? �????? �?????:	LCD_Test_Variable
 238:Core/Src/freertos.c **** *
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 13


 239:Core/Src/freertos.c **** *	函数功能:	变量显示，包括整数和小数
 240:Core/Src/freertos.c **** *************************************************************************************************/
 241:Core/Src/freertos.c **** void LCD_Test_Variable (void)
 242:Core/Src/freertos.c **** {
 417              		.loc 1 242 1 is_stmt 1 view -0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 422              	.LCFI7:
 423              		.cfi_def_cfa_offset 24
 424              		.cfi_offset 3, -24
 425              		.cfi_offset 4, -20
 426              		.cfi_offset 5, -16
 427              		.cfi_offset 6, -12
 428              		.cfi_offset 7, -8
 429              		.cfi_offset 14, -4
 243:Core/Src/freertos.c ****     uint16_t i;					// 计数变量
 430              		.loc 1 243 5 view .LVU69
 244:Core/Src/freertos.c ****     int32_t	a = 0;			// 定义整数变量，用于测�?????
 431              		.loc 1 244 5 view .LVU70
 432              	.LVL30:
 245:Core/Src/freertos.c ****     int32_t	b = 0;			// 定义整数变量，用于测�?????
 433              		.loc 1 245 5 view .LVU71
 246:Core/Src/freertos.c ****     int32_t	c = 0;			// 定义整数变量，用于测�?????
 434              		.loc 1 246 5 view .LVU72
 247:Core/Src/freertos.c **** 
 248:Core/Src/freertos.c ****     double p = 123.123;	// 定义浮点数变量，用于测试
 435              		.loc 1 248 5 view .LVU73
 249:Core/Src/freertos.c ****     double f = -123.123;	// 定义浮点数变量，用于测试
 436              		.loc 1 249 5 view .LVU74
 250:Core/Src/freertos.c ****     
 251:Core/Src/freertos.c ****     LCD_SetBackColor(LCD_DISP_BLACK); 			//	设置背景�?????
 437              		.loc 1 251 5 view .LVU75
 438 0002 0020     		movs	r0, #0
 439 0004 FFF7FEFF 		bl	LCD_SetBackColor
 440              	.LVL31:
 252:Core/Src/freertos.c ****     LCD_Clear(); 								// 清屏
 441              		.loc 1 252 5 view .LVU76
 442 0008 FFF7FEFF 		bl	LCD_Clear
 443              	.LVL32:
 253:Core/Src/freertos.c ****        
 254:Core/Src/freertos.c ****     LCD_SetColor(LCD_DISP_BLUE);					// 设置画笔，蓝绿色		
 444              		.loc 1 254 5 view .LVU77
 445 000c 1F20     		movs	r0, #31
 446 000e FFF7FEFF 		bl	LCD_SetColor
 447              	.LVL33:
 255:Core/Src/freertos.c ****     LCD_DisplayString(0,30,"test +:");				
 448              		.loc 1 255 5 view .LVU78
 449 0012 534A     		ldr	r2, .L33+24
 450 0014 1E21     		movs	r1, #30
 451 0016 0020     		movs	r0, #0
 452 0018 FFF7FEFF 		bl	LCD_DisplayString
 453              	.LVL34:
 256:Core/Src/freertos.c ****     LCD_DisplayString(0,60,"test -:");					
 454              		.loc 1 256 5 view .LVU79
 455 001c 514A     		ldr	r2, .L33+28
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 14


 456 001e 3C21     		movs	r1, #60
 457 0020 0020     		movs	r0, #0
 458 0022 FFF7FEFF 		bl	LCD_DisplayString
 459              	.LVL35:
 257:Core/Src/freertos.c ****           
 258:Core/Src/freertos.c ****     LCD_SetColor(LCD_DISP_GREEN);				// 设置画笔，亮黄色		
 460              		.loc 1 258 5 view .LVU80
 461 0026 4FF4FC60 		mov	r0, #2016
 462 002a FFF7FEFF 		bl	LCD_SetColor
 463              	.LVL36:
 259:Core/Src/freertos.c ****     LCD_DisplayString(0,100,"test :");	
 464              		.loc 1 259 5 view .LVU81
 465 002e 4E4A     		ldr	r2, .L33+32
 466 0030 6421     		movs	r1, #100
 467 0032 0020     		movs	r0, #0
 468 0034 FFF7FEFF 		bl	LCD_DisplayString
 469              	.LVL37:
 260:Core/Src/freertos.c ****     LCD_DisplayString(0,130,"test0:");	
 470              		.loc 1 260 5 view .LVU82
 471 0038 4C4A     		ldr	r2, .L33+36
 472 003a 8221     		movs	r1, #130
 473 003c 0020     		movs	r0, #0
 474 003e FFF7FEFF 		bl	LCD_DisplayString
 475              	.LVL38:
 261:Core/Src/freertos.c ****     
 262:Core/Src/freertos.c ****     LCD_SetColor(LCD_DISP_RED);					// 设置画笔	，亮红色		
 476              		.loc 1 262 5 view .LVU83
 477 0042 4FF47840 		mov	r0, #63488
 478 0046 FFF7FEFF 		bl	LCD_SetColor
 479              	.LVL39:
 263:Core/Src/freertos.c ****     LCD_DisplayString(0,170,"test+.:");	
 480              		.loc 1 263 5 view .LVU84
 481 004a 494A     		ldr	r2, .L33+40
 482 004c AA21     		movs	r1, #170
 483 004e 0020     		movs	r0, #0
 484 0050 FFF7FEFF 		bl	LCD_DisplayString
 485              	.LVL40:
 264:Core/Src/freertos.c ****     LCD_DisplayString(0,200,"test-.:");		
 486              		.loc 1 264 5 view .LVU85
 487 0054 474A     		ldr	r2, .L33+44
 488 0056 C821     		movs	r1, #200
 489 0058 0020     		movs	r0, #0
 490 005a FFF7FEFF 		bl	LCD_DisplayString
 491              	.LVL41:
 265:Core/Src/freertos.c ****     
 266:Core/Src/freertos.c ****     for(i=0;i<100;i++)
 492              		.loc 1 266 5 view .LVU86
 493              		.loc 1 266 10 is_stmt 0 view .LVU87
 494 005e 0024     		movs	r4, #0
 495              		.loc 1 266 5 view .LVU88
 496 0060 6AE0     		b	.L30
 497              	.LVL42:
 498              	.L31:
 267:Core/Src/freertos.c ****     {
 268:Core/Src/freertos.c ****         LCD_SetColor(LCD_DISP_BLUE);								// 设置画笔	，蓝绿色	
 499              		.loc 1 268 9 is_stmt 1 discriminator 3 view .LVU89
 500 0062 1F20     		movs	r0, #31
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 15


 501 0064 FFF7FEFF 		bl	LCD_SetColor
 502              	.LVL43:
 269:Core/Src/freertos.c ****         LCD_ShowNumMode(Fill_Space);							// 多余位填充空�?????
 503              		.loc 1 269 9 discriminator 3 view .LVU90
 504 0068 0120     		movs	r0, #1
 505 006a FFF7FEFF 		bl	LCD_ShowNumMode
 506              	.LVL44:
 270:Core/Src/freertos.c ****         LCD_DisplayNumber( 80,30, b+i*10, 4) ;				// 显示变量			
 507              		.loc 1 270 9 discriminator 3 view .LVU91
 508              		.loc 1 270 38 is_stmt 0 discriminator 3 view .LVU92
 509 006e 04EB8402 		add	r2, r4, r4, lsl #2
 510              		.loc 1 270 9 discriminator 3 view .LVU93
 511 0072 0423     		movs	r3, #4
 512 0074 5200     		lsls	r2, r2, #1
 513 0076 1E21     		movs	r1, #30
 514 0078 5020     		movs	r0, #80
 515 007a FFF7FEFF 		bl	LCD_DisplayNumber
 516              	.LVL45:
 271:Core/Src/freertos.c ****         LCD_DisplayNumber( 80,60, c-i*10, 4) ;				// 显示变量			
 517              		.loc 1 271 9 is_stmt 1 discriminator 3 view .LVU94
 518 007e 0423     		movs	r3, #4
 519 0080 6FF00902 		mvn	r2, #9
 520 0084 04FB02F2 		mul	r2, r4, r2
 521 0088 3C21     		movs	r1, #60
 522 008a 5020     		movs	r0, #80
 523 008c FFF7FEFF 		bl	LCD_DisplayNumber
 524              	.LVL46:
 272:Core/Src/freertos.c ****         
 273:Core/Src/freertos.c ****         LCD_SetColor(LCD_DISP_GREEN);								// 设置画笔，亮黄色	
 525              		.loc 1 273 9 discriminator 3 view .LVU95
 526 0090 4FF4FC60 		mov	r0, #2016
 527 0094 FFF7FEFF 		bl	LCD_SetColor
 528              	.LVL47:
 274:Core/Src/freertos.c **** 
 275:Core/Src/freertos.c ****         LCD_ShowNumMode(Fill_Space);								// 多余位填�????? 空格
 529              		.loc 1 275 9 discriminator 3 view .LVU96
 530 0098 0120     		movs	r0, #1
 531 009a FFF7FEFF 		bl	LCD_ShowNumMode
 532              	.LVL48:
 276:Core/Src/freertos.c ****         LCD_DisplayNumber( 130,100, a+i*150, 8) ;				// 显示变量		
 533              		.loc 1 276 9 discriminator 3 view .LVU97
 534              		.loc 1 276 40 is_stmt 0 discriminator 3 view .LVU98
 535 009e 9625     		movs	r5, #150
 536 00a0 04FB05F5 		mul	r5, r4, r5
 537              		.loc 1 276 9 discriminator 3 view .LVU99
 538 00a4 0823     		movs	r3, #8
 539 00a6 2A46     		mov	r2, r5
 540 00a8 6421     		movs	r1, #100
 541 00aa 8220     		movs	r0, #130
 542 00ac FFF7FEFF 		bl	LCD_DisplayNumber
 543              	.LVL49:
 277:Core/Src/freertos.c **** 
 278:Core/Src/freertos.c ****         LCD_ShowNumMode(Fill_Zero);								// 多余位填�?????0      
 544              		.loc 1 278 9 is_stmt 1 discriminator 3 view .LVU100
 545 00b0 0020     		movs	r0, #0
 546 00b2 FFF7FEFF 		bl	LCD_ShowNumMode
 547              	.LVL50:
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 16


 279:Core/Src/freertos.c ****         LCD_DisplayNumber( 130,130, b+i*150, 8) ;				// 显示变量			
 548              		.loc 1 279 9 discriminator 3 view .LVU101
 549 00b6 0823     		movs	r3, #8
 550 00b8 2A46     		mov	r2, r5
 551 00ba 8221     		movs	r1, #130
 552 00bc 0846     		mov	r0, r1
 553 00be FFF7FEFF 		bl	LCD_DisplayNumber
 554              	.LVL51:
 280:Core/Src/freertos.c ****         
 281:Core/Src/freertos.c ****         LCD_SetColor(LCD_DISP_RED);									// 设置画笔，亮红色			
 555              		.loc 1 281 9 discriminator 3 view .LVU102
 556 00c2 4FF47840 		mov	r0, #63488
 557 00c6 FFF7FEFF 		bl	LCD_SetColor
 558              	.LVL52:
 282:Core/Src/freertos.c ****         LCD_ShowNumMode(Fill_Space);								// 多余位填充空�?????		
 559              		.loc 1 282 9 discriminator 3 view .LVU103
 560 00ca 0120     		movs	r0, #1
 561 00cc FFF7FEFF 		bl	LCD_ShowNumMode
 562              	.LVL53:
 283:Core/Src/freertos.c ****         LCD_DisplayDecimals( 100,170, p+i*0.1,  10,3);		// 显示小数	
 563              		.loc 1 283 9 discriminator 3 view .LVU104
 564              		.loc 1 283 42 is_stmt 0 discriminator 3 view .LVU105
 565 00d0 2046     		mov	r0, r4
 566 00d2 FFF7FEFF 		bl	__aeabi_i2d
 567              	.LVL54:
 568 00d6 0646     		mov	r6, r0
 569 00d8 0F46     		mov	r7, r1
 570 00da 1BA3     		adr	r3, .L33
 571 00dc D3E90023 		ldrd	r2, [r3]
 572 00e0 FFF7FEFF 		bl	__aeabi_dmul
 573              	.LVL55:
 574              		.loc 1 283 40 discriminator 3 view .LVU106
 575 00e4 1AA3     		adr	r3, .L33+8
 576 00e6 D3E90023 		ldrd	r2, [r3]
 577 00ea FFF7FEFF 		bl	__aeabi_dadd
 578              	.LVL56:
 579              		.loc 1 283 9 discriminator 3 view .LVU107
 580 00ee FFF7FEFF 		bl	__aeabi_d2f
 581              	.LVL57:
 582 00f2 0323     		movs	r3, #3
 583 00f4 0A22     		movs	r2, #10
 584 00f6 00EE100A 		vmov	s0, r0
 585 00fa AA21     		movs	r1, #170
 586 00fc 6420     		movs	r0, #100
 587 00fe FFF7FEFF 		bl	LCD_DisplayDecimals
 588              	.LVL58:
 284:Core/Src/freertos.c ****         LCD_DisplayDecimals( 100,200, f+i*0.01, 10,4);		// 显示小数		
 589              		.loc 1 284 9 is_stmt 1 discriminator 3 view .LVU108
 590              		.loc 1 284 42 is_stmt 0 discriminator 3 view .LVU109
 591 0102 15A3     		adr	r3, .L33+16
 592 0104 D3E90023 		ldrd	r2, [r3]
 593 0108 3046     		mov	r0, r6
 594 010a 3946     		mov	r1, r7
 595 010c FFF7FEFF 		bl	__aeabi_dmul
 596              	.LVL59:
 597              		.loc 1 284 40 discriminator 3 view .LVU110
 598 0110 0FA3     		adr	r3, .L33+8
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 17


 599 0112 D3E90023 		ldrd	r2, [r3]
 600 0116 FFF7FEFF 		bl	__aeabi_dsub
 601              	.LVL60:
 602              		.loc 1 284 9 discriminator 3 view .LVU111
 603 011a FFF7FEFF 		bl	__aeabi_d2f
 604              	.LVL61:
 605 011e 0423     		movs	r3, #4
 606 0120 0A22     		movs	r2, #10
 607 0122 00EE100A 		vmov	s0, r0
 608 0126 C821     		movs	r1, #200
 609 0128 6420     		movs	r0, #100
 610 012a FFF7FEFF 		bl	LCD_DisplayDecimals
 611              	.LVL62:
 285:Core/Src/freertos.c ****         
 286:Core/Src/freertos.c ****         vTaskDelay(15);				
 612              		.loc 1 286 9 is_stmt 1 discriminator 3 view .LVU112
 613 012e 0F20     		movs	r0, #15
 614 0130 FFF7FEFF 		bl	vTaskDelay
 615              	.LVL63:
 266:Core/Src/freertos.c ****     {
 616              		.loc 1 266 19 discriminator 3 view .LVU113
 266:Core/Src/freertos.c ****     {
 617              		.loc 1 266 20 is_stmt 0 discriminator 3 view .LVU114
 618 0134 0134     		adds	r4, r4, #1
 619              	.LVL64:
 266:Core/Src/freertos.c ****     {
 620              		.loc 1 266 20 discriminator 3 view .LVU115
 621 0136 A4B2     		uxth	r4, r4
 622              	.LVL65:
 623              	.L30:
 266:Core/Src/freertos.c ****     {
 624              		.loc 1 266 13 is_stmt 1 discriminator 1 view .LVU116
 266:Core/Src/freertos.c ****     {
 625              		.loc 1 266 5 is_stmt 0 discriminator 1 view .LVU117
 626 0138 632C     		cmp	r4, #99
 627 013a 92D9     		bls	.L31
 287:Core/Src/freertos.c ****     }
 288:Core/Src/freertos.c ****     vTaskDelay(2500);		
 628              		.loc 1 288 5 is_stmt 1 view .LVU118
 629 013c 40F6C410 		movw	r0, #2500
 630 0140 FFF7FEFF 		bl	vTaskDelay
 631              	.LVL66:
 289:Core/Src/freertos.c **** }
 632              		.loc 1 289 1 is_stmt 0 view .LVU119
 633 0144 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 634              	.LVL67:
 635              	.L34:
 636              		.loc 1 289 1 view .LVU120
 637 0146 00BF     		.align	3
 638              	.L33:
 639 0148 9A999999 		.word	-1717986918
 640 014c 9999B93F 		.word	1069128089
 641 0150 1D5A643B 		.word	996432413
 642 0154 DFC75E40 		.word	1079953375
 643 0158 7B14AE47 		.word	1202590843
 644 015c E17A843F 		.word	1065646817
 645 0160 00000000 		.word	.LC4
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 18


 646 0164 08000000 		.word	.LC5
 647 0168 10000000 		.word	.LC6
 648 016c 18000000 		.word	.LC7
 649 0170 20000000 		.word	.LC8
 650 0174 28000000 		.word	.LC9
 651              		.cfi_endproc
 652              	.LFE180:
 654              		.section	.text.LCDViewTask,"ax",%progbits
 655              		.align	1
 656              		.global	LCDViewTask
 657              		.syntax unified
 658              		.thumb
 659              		.thumb_func
 661              	LCDViewTask:
 662              	.LFB176:
 179:Core/Src/freertos.c ****   while(1)
 663              		.loc 1 179 1 is_stmt 1 view -0
 664              		.cfi_startproc
 665              		@ Volatile: function does not return.
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              	.LVL68:
 179:Core/Src/freertos.c ****   while(1)
 669              		.loc 1 179 1 is_stmt 0 view .LVU122
 670 0000 08B5     		push	{r3, lr}
 671              	.LCFI8:
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 3, -8
 674              		.cfi_offset 14, -4
 675              	.LVL69:
 676              	.L36:
 180:Core/Src/freertos.c ****   {
 677              		.loc 1 180 3 is_stmt 1 discriminator 1 view .LVU123
 182:Core/Src/freertos.c ****     LCD_Test_Variable();    // 变量显示测试
 678              		.loc 1 182 5 discriminator 1 view .LVU124
 679 0002 FFF7FEFF 		bl	LCD_Test_Clear
 680              	.LVL70:
 183:Core/Src/freertos.c ****   }
 681              		.loc 1 183 5 discriminator 1 view .LVU125
 682 0006 FFF7FEFF 		bl	LCD_Test_Variable
 683              	.LVL71:
 180:Core/Src/freertos.c ****   {
 684              		.loc 1 180 8 discriminator 1 view .LVU126
 685 000a FAE7     		b	.L36
 686              		.cfi_endproc
 687              	.LFE176:
 689              		.global	startTask_attributes
 690              		.section	.rodata.str1.4,"aMS",%progbits,1
 691              		.align	2
 692              	.LC10:
 693 0000 73746172 		.ascii	"startTask\000"
 693      74546173 
 693      6B00
 694              		.global	startTaskHandle
 695              		.global	angle_frac
 696              		.global	angle_int
 697              		.global	angle
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 19


 698              		.global	HallTask_Handler
 699              		.global	MotorTask_Handler
 700              		.global	LCDViewTask_Handler
 701              		.section	.bss.HallTask_Handler,"aw",%nobits
 702              		.align	2
 703              		.set	.LANCHOR2,. + 0
 706              	HallTask_Handler:
 707 0000 00000000 		.space	4
 708              		.section	.bss.LCDViewTask_Handler,"aw",%nobits
 709              		.align	2
 710              		.set	.LANCHOR0,. + 0
 713              	LCDViewTask_Handler:
 714 0000 00000000 		.space	4
 715              		.section	.bss.MotorTask_Handler,"aw",%nobits
 716              		.align	2
 717              		.set	.LANCHOR1,. + 0
 720              	MotorTask_Handler:
 721 0000 00000000 		.space	4
 722              		.section	.bss.angle,"aw",%nobits
 723              		.align	2
 724              		.set	.LANCHOR4,. + 0
 727              	angle:
 728 0000 00000000 		.space	4
 729              		.section	.bss.angle_frac,"aw",%nobits
 730              		.align	2
 731              		.set	.LANCHOR6,. + 0
 734              	angle_frac:
 735 0000 00000000 		.space	4
 736              		.section	.bss.angle_int,"aw",%nobits
 737              		.align	2
 738              		.set	.LANCHOR5,. + 0
 741              	angle_int:
 742 0000 00000000 		.space	4
 743              		.section	.bss.startTaskHandle,"aw",%nobits
 744              		.align	2
 745              		.set	.LANCHOR3,. + 0
 748              	startTaskHandle:
 749 0000 00000000 		.space	4
 750              		.section	.rodata.startTask_attributes,"a"
 751              		.align	2
 752              		.set	.LANCHOR7,. + 0
 755              	startTask_attributes:
 756 0000 00000000 		.word	.LC10
 757 0004 00000000 		.space	16
 757      00000000 
 757      00000000 
 757      00000000 
 758 0014 00020000 		.word	512
 759 0018 18000000 		.word	24
 760 001c 00000000 		.space	8
 760      00000000 
 761              		.text
 762              	.Letext0:
 763              		.file 2 "d:\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 764              		.file 3 "d:\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 765              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 766              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 20


 767              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 768              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 769              		.file 8 "Core/Inc/spi.h"
 770              		.file 9 "Core/Inc/bsp_as5600.h"
 771              		.file 10 "Core/Inc/motor.h"
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:20     .rodata.StartTask.str1.4:00000000 $d
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:30     .text.StartTask:00000000 $t
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:36     .text.StartTask:00000000 StartTask
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:105    .text.StartTask:0000005c $d
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:661    .text.LCDViewTask:00000000 LCDViewTask
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:125    .text.MotorTask:00000000 MotorTask
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:166    .text.HallTask:00000000 HallTask
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:119    .text.MotorTask:00000000 $t
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:156    .rodata.HallTask.str1.4:00000000 $d
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:160    .text.HallTask:00000000 $t
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:225    .text.HallTask:00000048 $d
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:234    .text.MX_FREERTOS_Init:00000000 $t
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:240    .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:266    .text.MX_FREERTOS_Init:00000014 $d
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:273    .text.LCD_Test_Clear:00000000 $t
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:279    .text.LCD_Test_Clear:00000000 LCD_Test_Clear
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:339    .text.LCD_Test_Clear:00000038 $d
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:344    .text.LCD_Test_Clear:0000004c $t
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:385    .rodata.LCD_Test_Variable.str1.4:00000000 $d
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:409    .text.LCD_Test_Variable:00000000 $t
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:415    .text.LCD_Test_Variable:00000000 LCD_Test_Variable
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:639    .text.LCD_Test_Variable:00000148 $d
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:655    .text.LCDViewTask:00000000 $t
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:755    .rodata.startTask_attributes:00000000 startTask_attributes
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:691    .rodata.str1.4:00000000 $d
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:748    .bss.startTaskHandle:00000000 startTaskHandle
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:734    .bss.angle_frac:00000000 angle_frac
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:741    .bss.angle_int:00000000 angle_int
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:727    .bss.angle:00000000 angle
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:706    .bss.HallTask_Handler:00000000 HallTask_Handler
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:720    .bss.MotorTask_Handler:00000000 MotorTask_Handler
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:713    .bss.LCDViewTask_Handler:00000000 LCDViewTask_Handler
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:702    .bss.HallTask_Handler:00000000 $d
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:709    .bss.LCDViewTask_Handler:00000000 $d
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:716    .bss.MotorTask_Handler:00000000 $d
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:723    .bss.angle:00000000 $d
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:730    .bss.angle_frac:00000000 $d
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:737    .bss.angle_int:00000000 $d
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:744    .bss.startTaskHandle:00000000 $d
C:\Users\23612\AppData\Local\Temp\ccdks7rG.s:751    .rodata.startTask_attributes:00000000 $d

UNDEFINED SYMBOLS
vPortEnterCritical
xTaskCreate
osThreadTerminate
vPortExitCritical
velocityOpenloop
vTaskDelay
bsp_as5600GetAngle
Usart1Printf
osThreadNew
LCD_SetDirection
LCD_SetColor
LCD_SetBackColor
LCD_Clear
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccdks7rG.s 			page 22


__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
__aeabi_dsub
LCD_DisplayString
LCD_ShowNumMode
LCD_DisplayNumber
LCD_DisplayDecimals

ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.LCD_Test_Clear,"ax",%progbits
  20              		.align	1
  21              		.global	LCD_Test_Clear
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	LCD_Test_Clear:
  27              	.LFB172:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "dma.h"
  22:Core/Src/main.c **** #include "spi.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** void 	LCD_Test_Clear(void);			// 清屏测试
  57:Core/Src/main.c **** void 	LCD_Test_Variable (void);	   // 变量显示，包括整数和小数
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_DMA_Init();
  94:Core/Src/main.c ****   MX_USART1_UART_Init();
  95:Core/Src/main.c ****   MX_TIM4_Init();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  98:Core/Src/main.c ****   SPI_LCD_Init();    // 初始化LCD
  99:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 100:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_1);
 101:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2);
 102:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_3);
 103:Core/Src/main.c ****   /* USER CODE END 2 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Infinite loop */
 106:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 107:Core/Src/main.c ****   while (1)
 108:Core/Src/main.c ****   {
 109:Core/Src/main.c ****     LCD_Test_Clear();    // 清屏测试
 110:Core/Src/main.c ****     LCD_Test_Variable();    // 变量显示测试
 111:Core/Src/main.c ****     /* USER CODE END WHILE */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 114:Core/Src/main.c ****   }
 115:Core/Src/main.c ****   /* USER CODE END 3 */
 116:Core/Src/main.c **** }
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** /**
 119:Core/Src/main.c ****   * @brief System Clock Configuration
 120:Core/Src/main.c ****   * @retval None
 121:Core/Src/main.c ****   */
 122:Core/Src/main.c **** void SystemClock_Config(void)
 123:Core/Src/main.c **** {
 124:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 125:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 128:Core/Src/main.c ****   */
 129:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 130:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 133:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 360;
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 143:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 144:Core/Src/main.c ****   {
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 4


 145:Core/Src/main.c ****     Error_Handler();
 146:Core/Src/main.c ****   }
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /** Activate the Over-Drive mode
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c ****     Error_Handler();
 153:Core/Src/main.c ****   }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 156:Core/Src/main.c ****   */
 157:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 158:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 160:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 161:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 162:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 165:Core/Src/main.c ****   {
 166:Core/Src/main.c ****     Error_Handler();
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c **** }
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 171:Core/Src/main.c **** /*************************************************************************************************
 172:Core/Src/main.c **** *	�? �? �?:	LCD_Test_Clear
 173:Core/Src/main.c **** *
 174:Core/Src/main.c **** *	函数功能:	清屏测试
 175:Core/Src/main.c **** *************************************************************************************************/
 176:Core/Src/main.c **** void LCD_Test_Clear(void)
 177:Core/Src/main.c **** {
  29              		.loc 1 177 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
 178:Core/Src/main.c ****     uint8_t	i = 0;			// 计数变量
  38              		.loc 1 178 5 view .LVU1
  39              	.LVL0:
 179:Core/Src/main.c ****     
 180:Core/Src/main.c ****     LCD_SetDirection(Direction_H);		
  40              		.loc 1 180 5 view .LVU2
  41 0002 0020     		movs	r0, #0
  42 0004 FFF7FEFF 		bl	LCD_SetDirection
  43              	.LVL1:
 181:Core/Src/main.c ****     LCD_SetColor(LCD_DISP_BLACK);				// 设置画笔颜色
  44              		.loc 1 181 5 view .LVU3
  45 0008 0020     		movs	r0, #0
  46 000a FFF7FEFF 		bl	LCD_SetColor
  47              	.LVL2:
 182:Core/Src/main.c **** 
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 5


 183:Core/Src/main.c ****     for(i=0;i<5;i++)
  48              		.loc 1 183 5 view .LVU4
  49              		.loc 1 183 10 is_stmt 0 view .LVU5
  50 000e 0024     		movs	r4, #0
  51              		.loc 1 183 5 view .LVU6
  52 0010 0BE0     		b	.L2
  53              	.LVL3:
  54              	.L9:
 184:Core/Src/main.c ****     {
 185:Core/Src/main.c ****         switch (i)		// 切换背景�?
 186:Core/Src/main.c ****         {
 187:Core/Src/main.c ****             case 0: LCD_SetBackColor(LCD_DISP_RED); 		break;	
  55              		.loc 1 187 21 is_stmt 1 view .LVU7
  56 0012 4FF47840 		mov	r0, #63488
  57 0016 FFF7FEFF 		bl	LCD_SetBackColor
  58              	.LVL4:
  59              		.loc 1 187 55 view .LVU8
  60              	.L3:
 188:Core/Src/main.c ****             case 1: LCD_SetBackColor(LCD_DISP_GREEN); 	break;				
 189:Core/Src/main.c ****             case 2: LCD_SetBackColor(LCD_DISP_BLUE); 		break;
 190:Core/Src/main.c ****             case 3: LCD_SetBackColor(LCD_DISP_GRAY); 		break;
 191:Core/Src/main.c ****             case 4: LCD_SetBackColor(LCD_DISP_WHITE); 		break;			
 192:Core/Src/main.c ****             default:	break;			
 193:Core/Src/main.c ****         }
 194:Core/Src/main.c ****         LCD_Clear();		// 清屏
  61              		.loc 1 194 9 discriminator 2 view .LVU9
  62 001a FFF7FEFF 		bl	LCD_Clear
  63              	.LVL5:
 195:Core/Src/main.c ****         HAL_Delay(1000);
  64              		.loc 1 195 9 discriminator 2 view .LVU10
  65 001e 4FF47A70 		mov	r0, #1000
  66 0022 FFF7FEFF 		bl	HAL_Delay
  67              	.LVL6:
 183:Core/Src/main.c ****     {
  68              		.loc 1 183 17 discriminator 2 view .LVU11
 183:Core/Src/main.c ****     {
  69              		.loc 1 183 18 is_stmt 0 discriminator 2 view .LVU12
  70 0026 0134     		adds	r4, r4, #1
  71              	.LVL7:
 183:Core/Src/main.c ****     {
  72              		.loc 1 183 18 discriminator 2 view .LVU13
  73 0028 E4B2     		uxtb	r4, r4
  74              	.LVL8:
  75              	.L2:
 183:Core/Src/main.c ****     {
  76              		.loc 1 183 13 is_stmt 1 discriminator 1 view .LVU14
 183:Core/Src/main.c ****     {
  77              		.loc 1 183 5 is_stmt 0 discriminator 1 view .LVU15
  78 002a 042C     		cmp	r4, #4
  79 002c 21D8     		bhi	.L12
 185:Core/Src/main.c ****         {
  80              		.loc 1 185 9 is_stmt 1 view .LVU16
  81 002e 042C     		cmp	r4, #4
  82 0030 F3D8     		bhi	.L3
  83 0032 01A3     		adr	r3, .L5
  84 0034 53F824F0 		ldr	pc, [r3, r4, lsl #2]
  85              		.p2align 2
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 6


  86              	.L5:
  87 0038 13000000 		.word	.L9+1
  88 003c 4D000000 		.word	.L8+1
  89 0040 57000000 		.word	.L7+1
  90 0044 5F000000 		.word	.L6+1
  91 0048 69000000 		.word	.L4+1
  92              		.p2align 1
  93              	.L8:
 188:Core/Src/main.c ****             case 2: LCD_SetBackColor(LCD_DISP_BLUE); 		break;
  94              		.loc 1 188 21 view .LVU17
  95 004c 4FF4FC60 		mov	r0, #2016
  96 0050 FFF7FEFF 		bl	LCD_SetBackColor
  97              	.LVL9:
 188:Core/Src/main.c ****             case 2: LCD_SetBackColor(LCD_DISP_BLUE); 		break;
  98              		.loc 1 188 56 view .LVU18
 188:Core/Src/main.c ****             case 2: LCD_SetBackColor(LCD_DISP_BLUE); 		break;
  99              		.loc 1 188 13 is_stmt 0 view .LVU19
 100 0054 E1E7     		b	.L3
 101              	.L7:
 189:Core/Src/main.c ****             case 3: LCD_SetBackColor(LCD_DISP_GRAY); 		break;
 102              		.loc 1 189 21 is_stmt 1 view .LVU20
 103 0056 1F20     		movs	r0, #31
 104 0058 FFF7FEFF 		bl	LCD_SetBackColor
 105              	.LVL10:
 189:Core/Src/main.c ****             case 3: LCD_SetBackColor(LCD_DISP_GRAY); 		break;
 106              		.loc 1 189 56 view .LVU21
 189:Core/Src/main.c ****             case 3: LCD_SetBackColor(LCD_DISP_GRAY); 		break;
 107              		.loc 1 189 13 is_stmt 0 view .LVU22
 108 005c DDE7     		b	.L3
 109              	.L6:
 190:Core/Src/main.c ****             case 4: LCD_SetBackColor(LCD_DISP_WHITE); 		break;			
 110              		.loc 1 190 21 is_stmt 1 view .LVU23
 111 005e 4EF65D70 		movw	r0, #61277
 112 0062 FFF7FEFF 		bl	LCD_SetBackColor
 113              	.LVL11:
 190:Core/Src/main.c ****             case 4: LCD_SetBackColor(LCD_DISP_WHITE); 		break;			
 114              		.loc 1 190 56 view .LVU24
 190:Core/Src/main.c ****             case 4: LCD_SetBackColor(LCD_DISP_WHITE); 		break;			
 115              		.loc 1 190 13 is_stmt 0 view .LVU25
 116 0066 D8E7     		b	.L3
 117              	.L4:
 191:Core/Src/main.c ****             default:	break;			
 118              		.loc 1 191 21 is_stmt 1 view .LVU26
 119 0068 4FF6FF70 		movw	r0, #65535
 120 006c FFF7FEFF 		bl	LCD_SetBackColor
 121              	.LVL12:
 191:Core/Src/main.c ****             default:	break;			
 122              		.loc 1 191 57 view .LVU27
 191:Core/Src/main.c ****             default:	break;			
 123              		.loc 1 191 13 is_stmt 0 view .LVU28
 124 0070 D3E7     		b	.L3
 125              	.L12:
 196:Core/Src/main.c ****     }
 197:Core/Src/main.c **** }
 126              		.loc 1 197 1 view .LVU29
 127 0072 10BD     		pop	{r4, pc}
 128              		.loc 1 197 1 view .LVU30
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 7


 129              		.cfi_endproc
 130              	.LFE172:
 132              		.section	.rodata.LCD_Test_Variable.str1.4,"aMS",%progbits,1
 133              		.align	2
 134              	.LC0:
 135 0000 74657374 		.ascii	"test +:\000"
 135      202B3A00 
 136              		.align	2
 137              	.LC1:
 138 0008 74657374 		.ascii	"test -:\000"
 138      202D3A00 
 139              		.align	2
 140              	.LC2:
 141 0010 74657374 		.ascii	"test :\000"
 141      203A00
 142 0017 00       		.align	2
 143              	.LC3:
 144 0018 74657374 		.ascii	"test0:\000"
 144      303A00
 145 001f 00       		.align	2
 146              	.LC4:
 147 0020 74657374 		.ascii	"test+.:\000"
 147      2B2E3A00 
 148              		.align	2
 149              	.LC5:
 150 0028 74657374 		.ascii	"test-.:\000"
 150      2D2E3A00 
 151              		.global	__aeabi_i2d
 152              		.global	__aeabi_dmul
 153              		.global	__aeabi_dadd
 154              		.global	__aeabi_d2f
 155              		.global	__aeabi_dsub
 156              		.section	.text.LCD_Test_Variable,"ax",%progbits
 157              		.align	1
 158              		.global	LCD_Test_Variable
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 163              	LCD_Test_Variable:
 164              	.LFB173:
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** /************************************************************************************************
 201:Core/Src/main.c **** *	�? �? �?:	LCD_Test_Variable
 202:Core/Src/main.c **** *
 203:Core/Src/main.c **** *	函数功能:	变量显示，包括整数和小数
 204:Core/Src/main.c **** *************************************************************************************************/
 205:Core/Src/main.c **** void LCD_Test_Variable (void)
 206:Core/Src/main.c **** {
 165              		.loc 1 206 1 is_stmt 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 170              	.LCFI1:
 171              		.cfi_def_cfa_offset 24
 172              		.cfi_offset 3, -24
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 8


 173              		.cfi_offset 4, -20
 174              		.cfi_offset 5, -16
 175              		.cfi_offset 6, -12
 176              		.cfi_offset 7, -8
 177              		.cfi_offset 14, -4
 207:Core/Src/main.c ****     uint16_t i;					// 计数变量
 178              		.loc 1 207 5 view .LVU32
 208:Core/Src/main.c ****     int32_t	a = 0;			// 定义整数变量，用于测�?
 179              		.loc 1 208 5 view .LVU33
 180              	.LVL13:
 209:Core/Src/main.c ****     int32_t	b = 0;			// 定义整数变量，用于测�?
 181              		.loc 1 209 5 view .LVU34
 210:Core/Src/main.c ****     int32_t	c = 0;			// 定义整数变量，用于测�?
 182              		.loc 1 210 5 view .LVU35
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****     double p = 123.123;	// 定义浮点数变量，用于测试
 183              		.loc 1 212 5 view .LVU36
 213:Core/Src/main.c ****     double f = -123.123;	// 定义浮点数变量，用于测试
 184              		.loc 1 213 5 view .LVU37
 214:Core/Src/main.c ****     
 215:Core/Src/main.c ****     LCD_SetBackColor(LCD_DISP_BLACK); 			//	设置背景�?
 185              		.loc 1 215 5 view .LVU38
 186 0002 0020     		movs	r0, #0
 187 0004 FFF7FEFF 		bl	LCD_SetBackColor
 188              	.LVL14:
 216:Core/Src/main.c ****     LCD_Clear(); 								// 清屏
 189              		.loc 1 216 5 view .LVU39
 190 0008 FFF7FEFF 		bl	LCD_Clear
 191              	.LVL15:
 217:Core/Src/main.c ****        
 218:Core/Src/main.c ****     LCD_SetColor(LCD_DISP_BLUE);					// 设置画笔，蓝绿色		
 192              		.loc 1 218 5 view .LVU40
 193 000c 1F20     		movs	r0, #31
 194 000e FFF7FEFF 		bl	LCD_SetColor
 195              	.LVL16:
 219:Core/Src/main.c ****     LCD_DisplayString(0,30,"test +:");				
 196              		.loc 1 219 5 view .LVU41
 197 0012 534A     		ldr	r2, .L17+24
 198 0014 1E21     		movs	r1, #30
 199 0016 0020     		movs	r0, #0
 200 0018 FFF7FEFF 		bl	LCD_DisplayString
 201              	.LVL17:
 220:Core/Src/main.c ****     LCD_DisplayString(0,60,"test -:");					
 202              		.loc 1 220 5 view .LVU42
 203 001c 514A     		ldr	r2, .L17+28
 204 001e 3C21     		movs	r1, #60
 205 0020 0020     		movs	r0, #0
 206 0022 FFF7FEFF 		bl	LCD_DisplayString
 207              	.LVL18:
 221:Core/Src/main.c ****           
 222:Core/Src/main.c ****     LCD_SetColor(LCD_DISP_GREEN);				// 设置画笔，亮黄色		
 208              		.loc 1 222 5 view .LVU43
 209 0026 4FF4FC60 		mov	r0, #2016
 210 002a FFF7FEFF 		bl	LCD_SetColor
 211              	.LVL19:
 223:Core/Src/main.c ****     LCD_DisplayString(0,100,"test :");	
 212              		.loc 1 223 5 view .LVU44
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 9


 213 002e 4E4A     		ldr	r2, .L17+32
 214 0030 6421     		movs	r1, #100
 215 0032 0020     		movs	r0, #0
 216 0034 FFF7FEFF 		bl	LCD_DisplayString
 217              	.LVL20:
 224:Core/Src/main.c ****     LCD_DisplayString(0,130,"test0:");	
 218              		.loc 1 224 5 view .LVU45
 219 0038 4C4A     		ldr	r2, .L17+36
 220 003a 8221     		movs	r1, #130
 221 003c 0020     		movs	r0, #0
 222 003e FFF7FEFF 		bl	LCD_DisplayString
 223              	.LVL21:
 225:Core/Src/main.c ****     
 226:Core/Src/main.c ****     LCD_SetColor(LCD_DISP_RED);					// 设置画笔	，亮红色		
 224              		.loc 1 226 5 view .LVU46
 225 0042 4FF47840 		mov	r0, #63488
 226 0046 FFF7FEFF 		bl	LCD_SetColor
 227              	.LVL22:
 227:Core/Src/main.c ****     LCD_DisplayString(0,170,"test+.:");	
 228              		.loc 1 227 5 view .LVU47
 229 004a 494A     		ldr	r2, .L17+40
 230 004c AA21     		movs	r1, #170
 231 004e 0020     		movs	r0, #0
 232 0050 FFF7FEFF 		bl	LCD_DisplayString
 233              	.LVL23:
 228:Core/Src/main.c ****     LCD_DisplayString(0,200,"test-.:");		
 234              		.loc 1 228 5 view .LVU48
 235 0054 474A     		ldr	r2, .L17+44
 236 0056 C821     		movs	r1, #200
 237 0058 0020     		movs	r0, #0
 238 005a FFF7FEFF 		bl	LCD_DisplayString
 239              	.LVL24:
 229:Core/Src/main.c ****     
 230:Core/Src/main.c ****     for(i=0;i<100;i++)
 240              		.loc 1 230 5 view .LVU49
 241              		.loc 1 230 10 is_stmt 0 view .LVU50
 242 005e 0024     		movs	r4, #0
 243              		.loc 1 230 5 view .LVU51
 244 0060 6AE0     		b	.L14
 245              	.LVL25:
 246              	.L15:
 231:Core/Src/main.c ****     {
 232:Core/Src/main.c ****         LCD_SetColor(LCD_DISP_BLUE);								// 设置画笔	，蓝绿色	
 247              		.loc 1 232 9 is_stmt 1 discriminator 3 view .LVU52
 248 0062 1F20     		movs	r0, #31
 249 0064 FFF7FEFF 		bl	LCD_SetColor
 250              	.LVL26:
 233:Core/Src/main.c ****         LCD_ShowNumMode(Fill_Space);							// 多余位填充空�?
 251              		.loc 1 233 9 discriminator 3 view .LVU53
 252 0068 0120     		movs	r0, #1
 253 006a FFF7FEFF 		bl	LCD_ShowNumMode
 254              	.LVL27:
 234:Core/Src/main.c ****         LCD_DisplayNumber( 80,30, b+i*10, 4) ;				// 显示变量			
 255              		.loc 1 234 9 discriminator 3 view .LVU54
 256              		.loc 1 234 38 is_stmt 0 discriminator 3 view .LVU55
 257 006e 04EB8402 		add	r2, r4, r4, lsl #2
 258              		.loc 1 234 9 discriminator 3 view .LVU56
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 10


 259 0072 0423     		movs	r3, #4
 260 0074 5200     		lsls	r2, r2, #1
 261 0076 1E21     		movs	r1, #30
 262 0078 5020     		movs	r0, #80
 263 007a FFF7FEFF 		bl	LCD_DisplayNumber
 264              	.LVL28:
 235:Core/Src/main.c ****         LCD_DisplayNumber( 80,60, c-i*10, 4) ;				// 显示变量			
 265              		.loc 1 235 9 is_stmt 1 discriminator 3 view .LVU57
 266 007e 0423     		movs	r3, #4
 267 0080 6FF00902 		mvn	r2, #9
 268 0084 04FB02F2 		mul	r2, r4, r2
 269 0088 3C21     		movs	r1, #60
 270 008a 5020     		movs	r0, #80
 271 008c FFF7FEFF 		bl	LCD_DisplayNumber
 272              	.LVL29:
 236:Core/Src/main.c ****         
 237:Core/Src/main.c ****         LCD_SetColor(LCD_DISP_GREEN);								// 设置画笔，亮黄色	
 273              		.loc 1 237 9 discriminator 3 view .LVU58
 274 0090 4FF4FC60 		mov	r0, #2016
 275 0094 FFF7FEFF 		bl	LCD_SetColor
 276              	.LVL30:
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****         LCD_ShowNumMode(Fill_Space);								// 多余位填�? 空格
 277              		.loc 1 239 9 discriminator 3 view .LVU59
 278 0098 0120     		movs	r0, #1
 279 009a FFF7FEFF 		bl	LCD_ShowNumMode
 280              	.LVL31:
 240:Core/Src/main.c ****         LCD_DisplayNumber( 130,100, a+i*150, 8) ;				// 显示变量		
 281              		.loc 1 240 9 discriminator 3 view .LVU60
 282              		.loc 1 240 40 is_stmt 0 discriminator 3 view .LVU61
 283 009e 9625     		movs	r5, #150
 284 00a0 04FB05F5 		mul	r5, r4, r5
 285              		.loc 1 240 9 discriminator 3 view .LVU62
 286 00a4 0823     		movs	r3, #8
 287 00a6 2A46     		mov	r2, r5
 288 00a8 6421     		movs	r1, #100
 289 00aa 8220     		movs	r0, #130
 290 00ac FFF7FEFF 		bl	LCD_DisplayNumber
 291              	.LVL32:
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****         LCD_ShowNumMode(Fill_Zero);								// 多余位填�?0      
 292              		.loc 1 242 9 is_stmt 1 discriminator 3 view .LVU63
 293 00b0 0020     		movs	r0, #0
 294 00b2 FFF7FEFF 		bl	LCD_ShowNumMode
 295              	.LVL33:
 243:Core/Src/main.c ****         LCD_DisplayNumber( 130,130, b+i*150, 8) ;				// 显示变量			
 296              		.loc 1 243 9 discriminator 3 view .LVU64
 297 00b6 0823     		movs	r3, #8
 298 00b8 2A46     		mov	r2, r5
 299 00ba 8221     		movs	r1, #130
 300 00bc 0846     		mov	r0, r1
 301 00be FFF7FEFF 		bl	LCD_DisplayNumber
 302              	.LVL34:
 244:Core/Src/main.c ****         
 245:Core/Src/main.c ****         LCD_SetColor(LCD_DISP_RED);									// 设置画笔，亮红色			
 303              		.loc 1 245 9 discriminator 3 view .LVU65
 304 00c2 4FF47840 		mov	r0, #63488
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 11


 305 00c6 FFF7FEFF 		bl	LCD_SetColor
 306              	.LVL35:
 246:Core/Src/main.c ****         LCD_ShowNumMode(Fill_Space);								// 多余位填充空�?		
 307              		.loc 1 246 9 discriminator 3 view .LVU66
 308 00ca 0120     		movs	r0, #1
 309 00cc FFF7FEFF 		bl	LCD_ShowNumMode
 310              	.LVL36:
 247:Core/Src/main.c ****         LCD_DisplayDecimals( 100,170, p+i*0.1,  10,3);		// 显示小数	
 311              		.loc 1 247 9 discriminator 3 view .LVU67
 312              		.loc 1 247 42 is_stmt 0 discriminator 3 view .LVU68
 313 00d0 2046     		mov	r0, r4
 314 00d2 FFF7FEFF 		bl	__aeabi_i2d
 315              	.LVL37:
 316 00d6 0646     		mov	r6, r0
 317 00d8 0F46     		mov	r7, r1
 318 00da 1BA3     		adr	r3, .L17
 319 00dc D3E90023 		ldrd	r2, [r3]
 320 00e0 FFF7FEFF 		bl	__aeabi_dmul
 321              	.LVL38:
 322              		.loc 1 247 40 discriminator 3 view .LVU69
 323 00e4 1AA3     		adr	r3, .L17+8
 324 00e6 D3E90023 		ldrd	r2, [r3]
 325 00ea FFF7FEFF 		bl	__aeabi_dadd
 326              	.LVL39:
 327              		.loc 1 247 9 discriminator 3 view .LVU70
 328 00ee FFF7FEFF 		bl	__aeabi_d2f
 329              	.LVL40:
 330 00f2 0323     		movs	r3, #3
 331 00f4 0A22     		movs	r2, #10
 332 00f6 00EE100A 		vmov	s0, r0
 333 00fa AA21     		movs	r1, #170
 334 00fc 6420     		movs	r0, #100
 335 00fe FFF7FEFF 		bl	LCD_DisplayDecimals
 336              	.LVL41:
 248:Core/Src/main.c ****         LCD_DisplayDecimals( 100,200, f+i*0.01, 10,4);		// 显示小数		
 337              		.loc 1 248 9 is_stmt 1 discriminator 3 view .LVU71
 338              		.loc 1 248 42 is_stmt 0 discriminator 3 view .LVU72
 339 0102 15A3     		adr	r3, .L17+16
 340 0104 D3E90023 		ldrd	r2, [r3]
 341 0108 3046     		mov	r0, r6
 342 010a 3946     		mov	r1, r7
 343 010c FFF7FEFF 		bl	__aeabi_dmul
 344              	.LVL42:
 345              		.loc 1 248 40 discriminator 3 view .LVU73
 346 0110 0FA3     		adr	r3, .L17+8
 347 0112 D3E90023 		ldrd	r2, [r3]
 348 0116 FFF7FEFF 		bl	__aeabi_dsub
 349              	.LVL43:
 350              		.loc 1 248 9 discriminator 3 view .LVU74
 351 011a FFF7FEFF 		bl	__aeabi_d2f
 352              	.LVL44:
 353 011e 0423     		movs	r3, #4
 354 0120 0A22     		movs	r2, #10
 355 0122 00EE100A 		vmov	s0, r0
 356 0126 C821     		movs	r1, #200
 357 0128 6420     		movs	r0, #100
 358 012a FFF7FEFF 		bl	LCD_DisplayDecimals
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 12


 359              	.LVL45:
 249:Core/Src/main.c ****         
 250:Core/Src/main.c ****         HAL_Delay(15);				
 360              		.loc 1 250 9 is_stmt 1 discriminator 3 view .LVU75
 361 012e 0F20     		movs	r0, #15
 362 0130 FFF7FEFF 		bl	HAL_Delay
 363              	.LVL46:
 230:Core/Src/main.c ****     {
 364              		.loc 1 230 19 discriminator 3 view .LVU76
 230:Core/Src/main.c ****     {
 365              		.loc 1 230 20 is_stmt 0 discriminator 3 view .LVU77
 366 0134 0134     		adds	r4, r4, #1
 367              	.LVL47:
 230:Core/Src/main.c ****     {
 368              		.loc 1 230 20 discriminator 3 view .LVU78
 369 0136 A4B2     		uxth	r4, r4
 370              	.LVL48:
 371              	.L14:
 230:Core/Src/main.c ****     {
 372              		.loc 1 230 13 is_stmt 1 discriminator 1 view .LVU79
 230:Core/Src/main.c ****     {
 373              		.loc 1 230 5 is_stmt 0 discriminator 1 view .LVU80
 374 0138 632C     		cmp	r4, #99
 375 013a 92D9     		bls	.L15
 251:Core/Src/main.c ****     }
 252:Core/Src/main.c ****     HAL_Delay(2500);		
 376              		.loc 1 252 5 is_stmt 1 view .LVU81
 377 013c 40F6C410 		movw	r0, #2500
 378 0140 FFF7FEFF 		bl	HAL_Delay
 379              	.LVL49:
 253:Core/Src/main.c **** }
 380              		.loc 1 253 1 is_stmt 0 view .LVU82
 381 0144 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 382              	.LVL50:
 383              	.L18:
 384              		.loc 1 253 1 view .LVU83
 385 0146 00BF     		.align	3
 386              	.L17:
 387 0148 9A999999 		.word	-1717986918
 388 014c 9999B93F 		.word	1069128089
 389 0150 1D5A643B 		.word	996432413
 390 0154 DFC75E40 		.word	1079953375
 391 0158 7B14AE47 		.word	1202590843
 392 015c E17A843F 		.word	1065646817
 393 0160 00000000 		.word	.LC0
 394 0164 08000000 		.word	.LC1
 395 0168 10000000 		.word	.LC2
 396 016c 18000000 		.word	.LC3
 397 0170 20000000 		.word	.LC4
 398 0174 28000000 		.word	.LC5
 399              		.cfi_endproc
 400              	.LFE173:
 402              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 403              		.align	1
 404              		.global	HAL_TIM_PeriodElapsedCallback
 405              		.syntax unified
 406              		.thumb
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 13


 407              		.thumb_func
 409              	HAL_TIM_PeriodElapsedCallback:
 410              	.LVL51:
 411              	.LFB174:
 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** /* USER CODE END 4 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** /**
 258:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 259:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 260:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 261:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 262:Core/Src/main.c ****   * @param  htim : TIM handle
 263:Core/Src/main.c ****   * @retval None
 264:Core/Src/main.c ****   */
 265:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 266:Core/Src/main.c **** {
 412              		.loc 1 266 1 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		.loc 1 266 1 is_stmt 0 view .LVU85
 417 0000 08B5     		push	{r3, lr}
 418              	.LCFI2:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 3, -8
 421              		.cfi_offset 14, -4
 267:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 270:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 422              		.loc 1 270 3 is_stmt 1 view .LVU86
 423              		.loc 1 270 11 is_stmt 0 view .LVU87
 424 0002 0268     		ldr	r2, [r0]
 425              		.loc 1 270 6 view .LVU88
 426 0004 034B     		ldr	r3, .L23
 427 0006 9A42     		cmp	r2, r3
 428 0008 00D0     		beq	.L22
 429              	.LVL52:
 430              	.L19:
 271:Core/Src/main.c ****     HAL_IncTick();
 272:Core/Src/main.c ****   }
 273:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 276:Core/Src/main.c **** }
 431              		.loc 1 276 1 view .LVU89
 432 000a 08BD     		pop	{r3, pc}
 433              	.LVL53:
 434              	.L22:
 271:Core/Src/main.c ****     HAL_IncTick();
 435              		.loc 1 271 5 is_stmt 1 view .LVU90
 436 000c FFF7FEFF 		bl	HAL_IncTick
 437              	.LVL54:
 438              		.loc 1 276 1 is_stmt 0 view .LVU91
 439 0010 FBE7     		b	.L19
 440              	.L24:
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 14


 441 0012 00BF     		.align	2
 442              	.L23:
 443 0014 00000140 		.word	1073807360
 444              		.cfi_endproc
 445              	.LFE174:
 447              		.section	.text.Error_Handler,"ax",%progbits
 448              		.align	1
 449              		.global	Error_Handler
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 454              	Error_Handler:
 455              	.LFB175:
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** /**
 279:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 280:Core/Src/main.c ****   * @retval None
 281:Core/Src/main.c ****   */
 282:Core/Src/main.c **** void Error_Handler(void)
 283:Core/Src/main.c **** {
 456              		.loc 1 283 1 is_stmt 1 view -0
 457              		.cfi_startproc
 458              		@ Volatile: function does not return.
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 284:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 285:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 286:Core/Src/main.c ****   __disable_irq();
 462              		.loc 1 286 3 view .LVU93
 463              	.LBB4:
 464              	.LBI4:
 465              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 15


  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 16


  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 17


 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 18


 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 19


 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 20


 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 21


 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 22


 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 23


 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 24


 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 25


 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 26


 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 27


 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 28


 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 29


 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 30


 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 31


 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 466              		.loc 2 960 27 view .LVU94
 467              	.LBB5:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 468              		.loc 2 962 3 view .LVU95
 469              		.syntax unified
 470              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 471 0000 72B6     		cpsid i
 472              	@ 0 "" 2
 473              		.thumb
 474              		.syntax unified
 475              	.L26:
 476              	.LBE5:
 477              	.LBE4:
 287:Core/Src/main.c ****   while (1)
 478              		.loc 1 287 3 discriminator 1 view .LVU96
 288:Core/Src/main.c ****   {
 289:Core/Src/main.c ****   }
 479              		.loc 1 289 3 discriminator 1 view .LVU97
 287:Core/Src/main.c ****   while (1)
 480              		.loc 1 287 9 discriminator 1 view .LVU98
 481 0002 FEE7     		b	.L26
 482              		.cfi_endproc
 483              	.LFE175:
 485              		.section	.text.SystemClock_Config,"ax",%progbits
 486              		.align	1
 487              		.global	SystemClock_Config
 488              		.syntax unified
 489              		.thumb
 490              		.thumb_func
 492              	SystemClock_Config:
 493              	.LFB171:
 123:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 32


 494              		.loc 1 123 1 view -0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 80
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498 0000 00B5     		push	{lr}
 499              	.LCFI3:
 500              		.cfi_def_cfa_offset 4
 501              		.cfi_offset 14, -4
 502 0002 95B0     		sub	sp, sp, #84
 503              	.LCFI4:
 504              		.cfi_def_cfa_offset 88
 124:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 505              		.loc 1 124 3 view .LVU100
 124:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 506              		.loc 1 124 22 is_stmt 0 view .LVU101
 507 0004 3022     		movs	r2, #48
 508 0006 0021     		movs	r1, #0
 509 0008 08A8     		add	r0, sp, #32
 510 000a FFF7FEFF 		bl	memset
 511              	.LVL55:
 125:Core/Src/main.c **** 
 512              		.loc 1 125 3 is_stmt 1 view .LVU102
 125:Core/Src/main.c **** 
 513              		.loc 1 125 22 is_stmt 0 view .LVU103
 514 000e 0023     		movs	r3, #0
 515 0010 0393     		str	r3, [sp, #12]
 516 0012 0493     		str	r3, [sp, #16]
 517 0014 0593     		str	r3, [sp, #20]
 518 0016 0693     		str	r3, [sp, #24]
 519 0018 0793     		str	r3, [sp, #28]
 129:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 520              		.loc 1 129 3 is_stmt 1 view .LVU104
 521              	.LBB6:
 129:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 522              		.loc 1 129 3 view .LVU105
 523 001a 0193     		str	r3, [sp, #4]
 129:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 524              		.loc 1 129 3 view .LVU106
 525 001c 234A     		ldr	r2, .L35
 526 001e 116C     		ldr	r1, [r2, #64]
 527 0020 41F08051 		orr	r1, r1, #268435456
 528 0024 1164     		str	r1, [r2, #64]
 129:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 529              		.loc 1 129 3 view .LVU107
 530 0026 126C     		ldr	r2, [r2, #64]
 531 0028 02F08052 		and	r2, r2, #268435456
 532 002c 0192     		str	r2, [sp, #4]
 129:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 533              		.loc 1 129 3 view .LVU108
 534 002e 019A     		ldr	r2, [sp, #4]
 535              	.LBE6:
 129:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 536              		.loc 1 129 3 view .LVU109
 130:Core/Src/main.c **** 
 537              		.loc 1 130 3 view .LVU110
 538              	.LBB7:
 130:Core/Src/main.c **** 
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 33


 539              		.loc 1 130 3 view .LVU111
 540 0030 0293     		str	r3, [sp, #8]
 130:Core/Src/main.c **** 
 541              		.loc 1 130 3 view .LVU112
 542 0032 1F4B     		ldr	r3, .L35+4
 543 0034 1A68     		ldr	r2, [r3]
 544 0036 42F44042 		orr	r2, r2, #49152
 545 003a 1A60     		str	r2, [r3]
 130:Core/Src/main.c **** 
 546              		.loc 1 130 3 view .LVU113
 547 003c 1B68     		ldr	r3, [r3]
 548 003e 03F44043 		and	r3, r3, #49152
 549 0042 0293     		str	r3, [sp, #8]
 130:Core/Src/main.c **** 
 550              		.loc 1 130 3 view .LVU114
 551 0044 029B     		ldr	r3, [sp, #8]
 552              	.LBE7:
 130:Core/Src/main.c **** 
 553              		.loc 1 130 3 view .LVU115
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 554              		.loc 1 135 3 view .LVU116
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 555              		.loc 1 135 36 is_stmt 0 view .LVU117
 556 0046 0123     		movs	r3, #1
 557 0048 0893     		str	r3, [sp, #32]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 558              		.loc 1 136 3 is_stmt 1 view .LVU118
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 559              		.loc 1 136 30 is_stmt 0 view .LVU119
 560 004a 4FF48033 		mov	r3, #65536
 561 004e 0993     		str	r3, [sp, #36]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 562              		.loc 1 137 3 is_stmt 1 view .LVU120
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 563              		.loc 1 137 34 is_stmt 0 view .LVU121
 564 0050 0223     		movs	r3, #2
 565 0052 0E93     		str	r3, [sp, #56]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 566              		.loc 1 138 3 is_stmt 1 view .LVU122
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 567              		.loc 1 138 35 is_stmt 0 view .LVU123
 568 0054 4FF48002 		mov	r2, #4194304
 569 0058 0F92     		str	r2, [sp, #60]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 360;
 570              		.loc 1 139 3 is_stmt 1 view .LVU124
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 360;
 571              		.loc 1 139 30 is_stmt 0 view .LVU125
 572 005a 1922     		movs	r2, #25
 573 005c 1092     		str	r2, [sp, #64]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 574              		.loc 1 140 3 is_stmt 1 view .LVU126
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 575              		.loc 1 140 30 is_stmt 0 view .LVU127
 576 005e 4FF4B472 		mov	r2, #360
 577 0062 1192     		str	r2, [sp, #68]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 578              		.loc 1 141 3 is_stmt 1 view .LVU128
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 34


 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 579              		.loc 1 141 30 is_stmt 0 view .LVU129
 580 0064 1293     		str	r3, [sp, #72]
 142:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 581              		.loc 1 142 3 is_stmt 1 view .LVU130
 142:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 582              		.loc 1 142 30 is_stmt 0 view .LVU131
 583 0066 0423     		movs	r3, #4
 584 0068 1393     		str	r3, [sp, #76]
 143:Core/Src/main.c ****   {
 585              		.loc 1 143 3 is_stmt 1 view .LVU132
 143:Core/Src/main.c ****   {
 586              		.loc 1 143 7 is_stmt 0 view .LVU133
 587 006a 08A8     		add	r0, sp, #32
 588 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 589              	.LVL56:
 143:Core/Src/main.c ****   {
 590              		.loc 1 143 6 view .LVU134
 591 0070 B0B9     		cbnz	r0, .L32
 150:Core/Src/main.c ****   {
 592              		.loc 1 150 3 is_stmt 1 view .LVU135
 150:Core/Src/main.c ****   {
 593              		.loc 1 150 7 is_stmt 0 view .LVU136
 594 0072 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 595              	.LVL57:
 150:Core/Src/main.c ****   {
 596              		.loc 1 150 6 view .LVU137
 597 0076 A8B9     		cbnz	r0, .L33
 157:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 598              		.loc 1 157 3 is_stmt 1 view .LVU138
 157:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 599              		.loc 1 157 31 is_stmt 0 view .LVU139
 600 0078 0F23     		movs	r3, #15
 601 007a 0393     		str	r3, [sp, #12]
 159:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 602              		.loc 1 159 3 is_stmt 1 view .LVU140
 159:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 603              		.loc 1 159 34 is_stmt 0 view .LVU141
 604 007c 0223     		movs	r3, #2
 605 007e 0493     		str	r3, [sp, #16]
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 606              		.loc 1 160 3 is_stmt 1 view .LVU142
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 607              		.loc 1 160 35 is_stmt 0 view .LVU143
 608 0080 0023     		movs	r3, #0
 609 0082 0593     		str	r3, [sp, #20]
 161:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 610              		.loc 1 161 3 is_stmt 1 view .LVU144
 161:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 611              		.loc 1 161 36 is_stmt 0 view .LVU145
 612 0084 4FF4A053 		mov	r3, #5120
 613 0088 0693     		str	r3, [sp, #24]
 162:Core/Src/main.c **** 
 614              		.loc 1 162 3 is_stmt 1 view .LVU146
 162:Core/Src/main.c **** 
 615              		.loc 1 162 36 is_stmt 0 view .LVU147
 616 008a 4FF48053 		mov	r3, #4096
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 35


 617 008e 0793     		str	r3, [sp, #28]
 164:Core/Src/main.c ****   {
 618              		.loc 1 164 3 is_stmt 1 view .LVU148
 164:Core/Src/main.c ****   {
 619              		.loc 1 164 7 is_stmt 0 view .LVU149
 620 0090 0521     		movs	r1, #5
 621 0092 03A8     		add	r0, sp, #12
 622 0094 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 623              	.LVL58:
 164:Core/Src/main.c ****   {
 624              		.loc 1 164 6 view .LVU150
 625 0098 30B9     		cbnz	r0, .L34
 168:Core/Src/main.c **** 
 626              		.loc 1 168 1 view .LVU151
 627 009a 15B0     		add	sp, sp, #84
 628              	.LCFI5:
 629              		.cfi_remember_state
 630              		.cfi_def_cfa_offset 4
 631              		@ sp needed
 632 009c 5DF804FB 		ldr	pc, [sp], #4
 633              	.L32:
 634              	.LCFI6:
 635              		.cfi_restore_state
 145:Core/Src/main.c ****   }
 636              		.loc 1 145 5 is_stmt 1 view .LVU152
 637 00a0 FFF7FEFF 		bl	Error_Handler
 638              	.LVL59:
 639              	.L33:
 152:Core/Src/main.c ****   }
 640              		.loc 1 152 5 view .LVU153
 641 00a4 FFF7FEFF 		bl	Error_Handler
 642              	.LVL60:
 643              	.L34:
 166:Core/Src/main.c ****   }
 644              		.loc 1 166 5 view .LVU154
 645 00a8 FFF7FEFF 		bl	Error_Handler
 646              	.LVL61:
 647              	.L36:
 648              		.align	2
 649              	.L35:
 650 00ac 00380240 		.word	1073887232
 651 00b0 00700040 		.word	1073770496
 652              		.cfi_endproc
 653              	.LFE171:
 655              		.section	.text.main,"ax",%progbits
 656              		.align	1
 657              		.global	main
 658              		.syntax unified
 659              		.thumb
 660              		.thumb_func
 662              	main:
 663              	.LFB170:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 664              		.loc 1 70 1 view -0
 665              		.cfi_startproc
 666              		@ Volatile: function does not return.
 667              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 36


 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669 0000 08B5     		push	{r3, lr}
 670              	.LCFI7:
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 3, -8
 673              		.cfi_offset 14, -4
  78:Core/Src/main.c **** 
 674              		.loc 1 78 3 view .LVU156
 675 0002 FFF7FEFF 		bl	HAL_Init
 676              	.LVL62:
  85:Core/Src/main.c **** 
 677              		.loc 1 85 3 view .LVU157
 678 0006 FFF7FEFF 		bl	SystemClock_Config
 679              	.LVL63:
  92:Core/Src/main.c ****   MX_DMA_Init();
 680              		.loc 1 92 3 view .LVU158
 681 000a FFF7FEFF 		bl	MX_GPIO_Init
 682              	.LVL64:
  93:Core/Src/main.c ****   MX_USART1_UART_Init();
 683              		.loc 1 93 3 view .LVU159
 684 000e FFF7FEFF 		bl	MX_DMA_Init
 685              	.LVL65:
  94:Core/Src/main.c ****   MX_TIM4_Init();
 686              		.loc 1 94 3 view .LVU160
 687 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 688              	.LVL66:
  95:Core/Src/main.c **** 
 689              		.loc 1 95 3 view .LVU161
 690 0016 FFF7FEFF 		bl	MX_TIM4_Init
 691              	.LVL67:
  98:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 692              		.loc 1 98 3 view .LVU162
 693 001a FFF7FEFF 		bl	SPI_LCD_Init
 694              	.LVL68:
  99:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_1);
 695              		.loc 1 99 3 view .LVU163
 696 001e 0A4C     		ldr	r4, .L40
 697 0020 2046     		mov	r0, r4
 698 0022 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 699              	.LVL69:
 100:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2);
 700              		.loc 1 100 3 view .LVU164
 701 0026 0021     		movs	r1, #0
 702 0028 2046     		mov	r0, r4
 703 002a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 704              	.LVL70:
 101:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_3);
 705              		.loc 1 101 3 view .LVU165
 706 002e 0421     		movs	r1, #4
 707 0030 2046     		mov	r0, r4
 708 0032 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 709              	.LVL71:
 102:Core/Src/main.c ****   /* USER CODE END 2 */
 710              		.loc 1 102 3 view .LVU166
 711 0036 0821     		movs	r1, #8
 712 0038 2046     		mov	r0, r4
 713 003a FFF7FEFF 		bl	HAL_TIM_PWM_Start
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 37


 714              	.LVL72:
 715              	.L38:
 107:Core/Src/main.c ****   {
 716              		.loc 1 107 3 discriminator 1 view .LVU167
 109:Core/Src/main.c ****     LCD_Test_Variable();    // 变量显示测试
 717              		.loc 1 109 5 discriminator 1 view .LVU168
 718 003e FFF7FEFF 		bl	LCD_Test_Clear
 719              	.LVL73:
 110:Core/Src/main.c ****     /* USER CODE END WHILE */
 720              		.loc 1 110 5 discriminator 1 view .LVU169
 721 0042 FFF7FEFF 		bl	LCD_Test_Variable
 722              	.LVL74:
 107:Core/Src/main.c ****   {
 723              		.loc 1 107 9 discriminator 1 view .LVU170
 724 0046 FAE7     		b	.L38
 725              	.L41:
 726              		.align	2
 727              	.L40:
 728 0048 00000000 		.word	htim4
 729              		.cfi_endproc
 730              	.LFE170:
 732              		.text
 733              	.Letext0:
 734              		.file 3 "d:\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 735              		.file 4 "d:\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 736              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 737              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 738              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 739              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 740              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 741              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 742              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 743              		.file 12 "Core/Inc/spi.h"
 744              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h"
 745              		.file 14 "Core/Inc/gpio.h"
 746              		.file 15 "Core/Inc/dma.h"
 747              		.file 16 "Core/Inc/usart.h"
 748              		.file 17 "Core/Inc/tim.h"
 749              		.file 18 "<built-in>"
ARM GAS  C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s 			page 38


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:20     .text.LCD_Test_Clear:00000000 $t
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:26     .text.LCD_Test_Clear:00000000 LCD_Test_Clear
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:87     .text.LCD_Test_Clear:00000038 $d
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:92     .text.LCD_Test_Clear:0000004c $t
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:133    .rodata.LCD_Test_Variable.str1.4:00000000 $d
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:157    .text.LCD_Test_Variable:00000000 $t
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:163    .text.LCD_Test_Variable:00000000 LCD_Test_Variable
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:387    .text.LCD_Test_Variable:00000148 $d
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:403    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:409    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:443    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:448    .text.Error_Handler:00000000 $t
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:454    .text.Error_Handler:00000000 Error_Handler
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:486    .text.SystemClock_Config:00000000 $t
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:492    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:650    .text.SystemClock_Config:000000ac $d
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:656    .text.main:00000000 $t
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:662    .text.main:00000000 main
C:\Users\23612\AppData\Local\Temp\ccEQIuP7.s:728    .text.main:00000048 $d

UNDEFINED SYMBOLS
LCD_SetDirection
LCD_SetColor
LCD_SetBackColor
LCD_Clear
HAL_Delay
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
__aeabi_dsub
LCD_DisplayString
LCD_ShowNumMode
LCD_DisplayNumber
LCD_DisplayDecimals
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART1_UART_Init
MX_TIM4_Init
SPI_LCD_Init
HAL_TIM_Base_Start_IT
HAL_TIM_PWM_Start
htim4
